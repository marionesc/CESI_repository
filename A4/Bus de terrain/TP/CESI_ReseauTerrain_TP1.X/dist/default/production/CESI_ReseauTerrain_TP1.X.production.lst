

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Nov 22 17:04:05 2022

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41  0000                     
    42                           ; Version 2.10
    43                           ; Generated 31/07/2019 GMT
    44                           ; 
    45                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F87K22 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataCOMRAM
    78  001A8A                     __pidataCOMRAM:
    79                           	opt callstack 0
    80                           
    81                           ;initializer for main@F6860
    82  001A8A  54                 	db	84
    83  001A8B  65                 	db	101
    84  001A8C  73                 	db	115
    85  001A8D  74                 	db	116
    86  001A8E  20                 	db	32
    87  001A8F  45                 	db	69
    88  001A90  45                 	db	69
    89  001A91  50                 	db	80
    90  001A92  52                 	db	82
    91  001A93  4F                 	db	79
    92  001A94  4D                 	db	77
    93  001A95  20                 	db	32
    94  001A96  00                 	db	0
    95  001A97  00                 	db	0
    96  001A98  00                 	db	0
    97  001A99  00                 	db	0
    98  0000                     _PADCFG1bits	set	3923
    99  0000                     _ANCON2	set	3875
   100  0000                     _ANCON1	set	3876
   101  0000                     _ANCON0	set	3877
   102  0000                     _MEMCON	set	3878
   103  0000                     _SSP2BUF	set	3946
   104  0000                     _SSP2CON1bits	set	3943
   105  0000                     _PIR2bits	set	4001
   106  0000                     _LATFbits	set	3982
   107  0000                     _TRISFbits	set	3991
   108  0000                     _TRISDbits	set	3989
   109  0000                     _SSP2CON1	set	3943
   110  0000                     _SSP2STAT	set	3944
   111  0000                     _TRISJ	set	3994
   112  0000                     _LATJ	set	3985
   113  0000                     _PORTH	set	3975
   114  0000                     _LATJbits	set	3985
   115  0000                     _TRISH	set	3993
   116  0000                     _LATH	set	3984
   117  0000                     _INTCON2bits	set	4081
   118  0000                     _TRISGbits	set	3992
   119  0000                     _TRISCbits	set	3988
   120  0000                     _TRISAbits	set	3986
   121  0000                     _LATGbits	set	3983
   122  0000                     _LATCbits	set	3979
   123                           
   124                           	psect	smallconst
   125  001000                     __psmallconst:
   126                           	opt callstack 0
   127  001000  00                 	db	0
   128  001001                     STR_1:
   129  001001  48                 	db	72	;'H'
   130  001002  65                 	db	101	;'e'
   131  001003  6C                 	db	108	;'l'
   132  001004  6C                 	db	108	;'l'
   133  001005  6F                 	db	111	;'o'
   134  001006  00                 	db	0
   135                           
   136                           ; #config settings
   137  001007  00                 	db	0	; dummy byte at the end
   138  0000                     
   139                           	psect	cinit
   140  0019AA                     __pcinit:
   141                           	opt callstack 0
   142  0019AA                     start_initialization:
   143                           	opt callstack 0
   144  0019AA                     __initialization:
   145                           	opt callstack 0
   146                           
   147                           ; Initialize objects allocated to COMRAM (16 bytes)
   148                           ; load TBLPTR registers with __pidataCOMRAM
   149  0019AA  0E8A               	movlw	low __pidataCOMRAM
   150  0019AC  6EF6               	movwf	tblptrl,c
   151  0019AE  0E1A               	movlw	high __pidataCOMRAM
   152  0019B0  6EF7               	movwf	tblptrh,c
   153  0019B2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   154  0019B4  6EF8               	movwf	tblptru,c
   155  0019B6  EE00  F03C         	lfsr	0,__pdataCOMRAM
   156  0019BA  EE10 F010          	lfsr	1,16
   157  0019BE                     copy_data0:
   158  0019BE  0009               	tblrd		*+
   159  0019C0  CFF5 FFEE          	movff	tablat,postinc0
   160  0019C4  50E5               	movf	postdec1,w,c
   161  0019C6  50E1               	movf	fsr1l,w,c
   162  0019C8  E1FA               	bnz	copy_data0
   163                           
   164                           ; Clear objects allocated to COMRAM (3 bytes)
   165  0019CA  6A4E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   166  0019CC  6A4D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   167  0019CE  6A4C               	clrf	__pbssCOMRAM& (0+255),c
   168  0019D0                     end_of_initialization:
   169                           	opt callstack 0
   170  0019D0                     __end_of__initialization:
   171                           	opt callstack 0
   172  0019D0  0100               	movlb	0
   173  0019D2  EF04  F008         	goto	_main	;jump to C main() function
   174                           
   175                           	psect	bssCOMRAM
   176  00004C                     __pbssCOMRAM:
   177                           	opt callstack 0
   178  00004C                     	ds	3
   179                           
   180                           	psect	dataCOMRAM
   181  00003C                     __pdataCOMRAM:
   182                           	opt callstack 0
   183  00003C                     main@F6860:
   184                           	opt callstack 0
   185  00003C                     	ds	16
   186                           
   187                           	psect	cstackCOMRAM
   188  000001                     __pcstackCOMRAM:
   189                           	opt callstack 0
   190  000001                     ?___awdiv:
   191                           	opt callstack 0
   192  000001                     ?___awmod:
   193                           	opt callstack 0
   194  000001                     write_d_aff@data:
   195                           	opt callstack 0
   196  000001                     write_c_aff@command:
   197                           	opt callstack 0
   198  000001                     check_status_ok@res:
   199                           	opt callstack 0
   200  000001                     delai_us_char@ucdelai:
   201                           	opt callstack 0
   202  000001                     SPI_ExchangeByte@data:
   203                           	opt callstack 0
   204  000001                     SPI_ExchangeBlock@block:
   205                           	opt callstack 0
   206  000001                     ___awdiv@dividend:
   207                           	opt callstack 0
   208  000001                     ___awmod@dividend:
   209                           	opt callstack 0
   210                           
   211                           ; 2 bytes @ 0x0
   212  000001                     	ds	1
   213  000002                     wait_status_ok@err:
   214                           	opt callstack 0
   215  000002                     EEP_SPI_IsWriteInProgress@u8WIP:
   216                           	opt callstack 0
   217                           
   218                           ; 1 bytes @ 0x1
   219  000002                     	ds	1
   220  000003                     wait_status_ok@status:
   221                           	opt callstack 0
   222  000003                     EEP_SPI_ReadByte@Fu8Address:
   223                           	opt callstack 0
   224  000003                     SPI_ExchangeBlock@blockSize:
   225                           	opt callstack 0
   226  000003                     ___awdiv@divisor:
   227                           	opt callstack 0
   228  000003                     ___awmod@divisor:
   229                           	opt callstack 0
   230                           
   231                           ; 2 bytes @ 0x2
   232  000003                     	ds	1
   233  000004                     wait_status_ok@res:
   234                           	opt callstack 0
   235  000004                     EEP_SPI_ReadByte@u8ReadData:
   236                           	opt callstack 0
   237                           
   238                           ; 1 bytes @ 0x3
   239  000004                     	ds	1
   240  000005                     d1command@cmd:
   241                           	opt callstack 0
   242  000005                     d2command@d2:
   243                           	opt callstack 0
   244  000005                     ___awdiv@counter:
   245                           	opt callstack 0
   246  000005                     ___awmod@counter:
   247                           	opt callstack 0
   248  000005                     SPI_ExchangeBlock@data:
   249                           	opt callstack 0
   250                           
   251                           ; 2 bytes @ 0x4
   252  000005                     	ds	1
   253  000006                     command@cmd:
   254                           	opt callstack 0
   255  000006                     d1command@d1:
   256                           	opt callstack 0
   257  000006                     d2command@cmd:
   258                           	opt callstack 0
   259  000006                     ___awdiv@sign:
   260                           	opt callstack 0
   261  000006                     ___awmod@sign:
   262                           	opt callstack 0
   263                           
   264                           ; 1 bytes @ 0x5
   265  000006                     	ds	1
   266  000007                     d1command@res:
   267                           	opt callstack 0
   268  000007                     d2command@d1:
   269                           	opt callstack 0
   270  000007                     EEP_SPI_WriteByte@Fu8Data:
   271                           	opt callstack 0
   272  000007                     ___awdiv@quotient:
   273                           	opt callstack 0
   274                           
   275                           ; 2 bytes @ 0x6
   276  000007                     	ds	1
   277  000008                     d2command@res:
   278                           	opt callstack 0
   279  000008                     EEP_SPI_WriteByte@Fu8Address:
   280                           	opt callstack 0
   281  000008                     draw_string@tableau:
   282                           	opt callstack 0
   283                           
   284                           ; 2 bytes @ 0x7
   285  000008                     	ds	1
   286  000009                     initialisation_afficheur@error_count:
   287                           	opt callstack 0
   288  000009                     goto_lico@colonne:
   289                           	opt callstack 0
   290  000009                     plot1@y:
   291                           	opt callstack 0
   292  000009                     clear_text@add:
   293                           	opt callstack 0
   294  000009                     clear_graphics@add:
   295                           	opt callstack 0
   296  000009                     EEP_SPI_WriteByte@tu8Data:
   297                           	opt callstack 0
   298                           
   299                           ; 3 bytes @ 0x8
   300  000009                     	ds	1
   301  00000A                     ??_goto_lico:
   302  00000A                     ??_plot1:
   303                           
   304                           ; 1 bytes @ 0x9
   305  00000A                     	ds	2
   306  00000C                     goto_lico@ligne:
   307                           	opt callstack 0
   308  00000C                     plot1@add:
   309                           	opt callstack 0
   310  00000C                     EEP_SPI_WriteBytes@Fpu8Data:
   311                           	opt callstack 0
   312                           
   313                           ; 2 bytes @ 0xB
   314  00000C                     	ds	1
   315  00000D                     goto_lico@adr:
   316                           	opt callstack 0
   317                           
   318                           ; 2 bytes @ 0xC
   319  00000D                     	ds	1
   320  00000E                     plot1@x:
   321                           	opt callstack 0
   322  00000E                     EEP_SPI_WriteBytes@Fu8Size:
   323                           	opt callstack 0
   324                           
   325                           ; 1 bytes @ 0xD
   326  00000E                     	ds	1
   327  00000F                     drawVericalLine@colonne:
   328                           	opt callstack 0
   329  00000F                     EEP_SPI_WriteBytes@Fu8Address:
   330                           	opt callstack 0
   331                           
   332                           ; 1 bytes @ 0xE
   333  00000F                     	ds	1
   334  000010                     drawVericalLine@lenght:
   335                           	opt callstack 0
   336  000010                     EEP_SPI_WriteBytes@u8Index:
   337                           	opt callstack 0
   338                           
   339                           ; 1 bytes @ 0xF
   340  000010                     	ds	1
   341  000011                     drawVericalLine@ligne:
   342                           	opt callstack 0
   343                           
   344                           ; 1 bytes @ 0x10
   345  000011                     	ds	1
   346  000012                     drawVericalLine@index:
   347                           	opt callstack 0
   348                           
   349                           ; 1 bytes @ 0x11
   350  000012                     	ds	1
   351  000013                     ??_main:
   352                           
   353                           ; 1 bytes @ 0x12
   354  000013                     	ds	1
   355  000014                     main@tu8Data:
   356                           	opt callstack 0
   357                           
   358                           ; 16 bytes @ 0x13
   359  000014                     	ds	16
   360  000024                     main@tu8DataFromEEPROM:
   361                           	opt callstack 0
   362                           
   363                           ; 20 bytes @ 0x23
   364  000024                     	ds	20
   365  000038                     _main$1411:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0x37
   369  000038                     	ds	2
   370  00003A                     main@u8Index:
   371                           	opt callstack 0
   372                           
   373                           ; 1 bytes @ 0x39
   374  00003A                     	ds	1
   375  00003B                     main@u8Cpt:
   376                           	opt callstack 0
   377                           
   378                           ; 1 bytes @ 0x3A
   379  00003B                     	ds	1
   380                           
   381 ;;
   382 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   383 ;;
   384 ;; *************** function _main *****************
   385 ;; Defined at:
   386 ;;		line 46 in file "main.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;  tu8DataFromE   20   35[COMRAM] unsigned char [20]
   391 ;;  tu8Data        16   19[COMRAM] unsigned char [16]
   392 ;;  u8Cpt           1   58[COMRAM] unsigned char 
   393 ;;  u8Index         1   57[COMRAM] unsigned char 
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   404 ;;      Locals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   405 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   406 ;;      Totals:        41       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;Total ram usage:       41 bytes
   408 ;; Hardware stack levels required when called:    5
   409 ;; This function calls:
   410 ;;		_EEP_SPI_Initialize
   411 ;;		_EEP_SPI_ReadByte
   412 ;;		_EEP_SPI_WriteBytes
   413 ;;		_SPI_Initialize
   414 ;;		___awdiv
   415 ;;		_clear_graphics
   416 ;;		_clear_text
   417 ;;		_drawVericalLine
   418 ;;		_draw_string
   419 ;;		_goto_lico
   420 ;;		_initialisation_afficheur
   421 ;;		_initialisation_des_ports
   422 ;; This function is called by:
   423 ;;		Startup code after reset
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           	psect	text0
   428  001008                     __ptext0:
   429                           	opt callstack 0
   430  001008                     _main:
   431                           	opt callstack 26
   432  001008                     
   433                           ;main.c: 48:     uint8_t tu8Data[16] = {0x54,0x65,0x73,0x74,0x20,0x45,0x45,0x50,0x52,0x4
      +                          F,0x4D,0x20,0x00,0x00,0x00,0x00};
   434  001008  EE20  F03C         	lfsr	2,main@F6860
   435  00100C  EE10  F014         	lfsr	1,main@tu8Data
   436  001010  0E0F               	movlw	15
   437  001012                     u1051:
   438  001012  CFDB FFE3          	movff	plusw2,plusw1
   439  001016  06E8               	decf	wreg,f,c
   440  001018  E2FC               	bc	u1051
   441  00101A                     
   442                           ;main.c: 53:     for(u8Index=0; u8Index<20; u8Index++)
   443  00101A  0E00               	movlw	0
   444  00101C  6E3A               	movwf	main@u8Index^0,c
   445  00101E                     l2063:
   446                           
   447                           ;main.c: 54:     {;main.c: 55:         tu8DataFromEEPROM[u8Index] = 0x00;
   448  00101E  0E24               	movlw	low main@tu8DataFromEEPROM
   449  001020  243A               	addwf	main@u8Index^0,w,c
   450  001022  6ED9               	movwf	fsr2l,c
   451  001024  6ADA               	clrf	fsr2h,c
   452  001026  0E00               	movlw	high main@tu8DataFromEEPROM
   453  001028  22DA               	addwfc	fsr2h,f,c
   454  00102A  0E00               	movlw	0
   455  00102C  6EDF               	movwf	indf2,c
   456  00102E                     
   457                           ;main.c: 56:     }
   458  00102E  2A3A               	incf	main@u8Index^0,f,c
   459  001030  0E13               	movlw	19
   460  001032  643A               	cpfsgt	main@u8Index^0,c
   461  001034  EF1E  F008         	goto	u1061
   462  001038  EF20  F008         	goto	u1060
   463  00103C                     u1061:
   464  00103C  EF0F  F008         	goto	l2063
   465  001040                     u1060:
   466  001040                     
   467                           ;main.c: 58:     initialisation_des_ports();
   468  001040  ECEB  F00C         	call	_initialisation_des_ports	;wreg free
   469  001044                     
   470                           ;main.c: 59:     initialisation_afficheur();
   471  001044  EC0B  F009         	call	_initialisation_afficheur	;wreg free
   472  001048                     
   473                           ;main.c: 60:     SPI_Initialize();
   474  001048  EC3A  F00D         	call	_SPI_Initialize	;wreg free
   475  00104C                     
   476                           ;main.c: 61:     EEP_SPI_Initialize();
   477  00104C  EC53  F00D         	call	_EEP_SPI_Initialize	;wreg free
   478  001050                     
   479                           ;main.c: 63:     clear_text();
   480  001050  EC3C  F00C         	call	_clear_text	;wreg free
   481  001054                     
   482                           ;main.c: 64:     clear_graphics();
   483  001054  EC59  F00C         	call	_clear_graphics	;wreg free
   484  001058                     
   485                           ;main.c: 66:     goto_lico(0,0);
   486  001058  0E00               	movlw	0
   487  00105A  6E09               	movwf	goto_lico@colonne^0,c
   488  00105C  0E00               	movlw	0
   489  00105E  ECDC  F00A         	call	_goto_lico
   490  001062                     
   491                           ;main.c: 67:     draw_string((unsigned char *)"Hello");
   492  001062  0E01               	movlw	low STR_1
   493  001064  6E08               	movwf	draw_string@tableau^0,c
   494  001066  0E10               	movlw	high STR_1
   495  001068  6E09               	movwf	(draw_string@tableau+1)^0,c
   496  00106A  EC9F  F00A         	call	_draw_string	;wreg free
   497  00106E                     
   498                           ;main.c: 69:     drawVericalLine(10, 180, 80);
   499  00106E  0EB4               	movlw	180
   500  001070  6E0F               	movwf	drawVericalLine@colonne^0,c
   501  001072  0E50               	movlw	80
   502  001074  6E10               	movwf	drawVericalLine@lenght^0,c
   503  001076  0E0A               	movlw	10
   504  001078  EC8F  F00C         	call	_drawVericalLine
   505  00107C                     
   506                           ;main.c: 71:     for(u8Index=0; u8Index<20; u8Index++)
   507  00107C  0E00               	movlw	0
   508  00107E  6E3A               	movwf	main@u8Index^0,c
   509  001080                     l2093:
   510                           
   511                           ;main.c: 72:     {;main.c: 73:         tu8DataFromEEPROM[u8Index] = EEP_SPI_ReadByte(u8I
      +                          ndex);
   512  001080  0E24               	movlw	low main@tu8DataFromEEPROM
   513  001082  243A               	addwf	main@u8Index^0,w,c
   514  001084  6ED9               	movwf	fsr2l,c
   515  001086  6ADA               	clrf	fsr2h,c
   516  001088  0E00               	movlw	high main@tu8DataFromEEPROM
   517  00108A  22DA               	addwfc	fsr2h,f,c
   518  00108C  503A               	movf	main@u8Index^0,w,c
   519  00108E  EC76  F00C         	call	_EEP_SPI_ReadByte
   520  001092  6EDF               	movwf	indf2,c
   521  001094                     
   522                           ;main.c: 74:     }
   523  001094  2A3A               	incf	main@u8Index^0,f,c
   524  001096  0E13               	movlw	19
   525  001098  643A               	cpfsgt	main@u8Index^0,c
   526  00109A  EF51  F008         	goto	u1071
   527  00109E  EF53  F008         	goto	u1070
   528  0010A2                     u1071:
   529  0010A2  EF40  F008         	goto	l2093
   530  0010A6                     u1070:
   531  0010A6                     
   532                           ;main.c: 77:     goto_lico(1,1);
   533  0010A6  0E01               	movlw	1
   534  0010A8  6E09               	movwf	goto_lico@colonne^0,c
   535  0010AA  0E01               	movlw	1
   536  0010AC  ECDC  F00A         	call	_goto_lico
   537  0010B0                     
   538                           ;main.c: 78:     draw_string((unsigned char *)&tu8DataFromEEPROM);
   539  0010B0  0E24               	movlw	low main@tu8DataFromEEPROM
   540  0010B2  6E08               	movwf	draw_string@tableau^0,c
   541  0010B4  0E00               	movlw	high main@tu8DataFromEEPROM
   542  0010B6  6E09               	movwf	(draw_string@tableau+1)^0,c
   543  0010B8  EC9F  F00A         	call	_draw_string	;wreg free
   544  0010BC                     
   545                           ;main.c: 81:     if( (tu8DataFromEEPROM[12]<0x30)||(tu8DataFromEEPROM[12]>0x39)
   546  0010BC  0E2F               	movlw	47
   547  0010BE  6430               	cpfsgt	(main@tu8DataFromEEPROM+12)^0,c
   548  0010C0  EF64  F008         	goto	u1081
   549  0010C4  EF66  F008         	goto	u1080
   550  0010C8                     u1081:
   551  0010C8  EF8E  F008         	goto	l2115
   552  0010CC                     u1080:
   553  0010CC  0E3A               	movlw	58
   554  0010CE  6030               	cpfslt	(main@tu8DataFromEEPROM+12)^0,c
   555  0010D0  EF6C  F008         	goto	u1091
   556  0010D4  EF6E  F008         	goto	u1090
   557  0010D8                     u1091:
   558  0010D8  EF8E  F008         	goto	l2115
   559  0010DC                     u1090:
   560  0010DC  0E2F               	movlw	47
   561  0010DE  6431               	cpfsgt	(main@tu8DataFromEEPROM+13)^0,c
   562  0010E0  EF74  F008         	goto	u1101
   563  0010E4  EF76  F008         	goto	u1100
   564  0010E8                     u1101:
   565  0010E8  EF8E  F008         	goto	l2115
   566  0010EC                     u1100:
   567  0010EC  0E3A               	movlw	58
   568  0010EE  6031               	cpfslt	(main@tu8DataFromEEPROM+13)^0,c
   569  0010F0  EF7C  F008         	goto	u1111
   570  0010F4  EF7E  F008         	goto	u1110
   571  0010F8                     u1111:
   572  0010F8  EF8E  F008         	goto	l2115
   573  0010FC                     u1110:
   574  0010FC  0E2F               	movlw	47
   575  0010FE  6432               	cpfsgt	(main@tu8DataFromEEPROM+14)^0,c
   576  001100  EF84  F008         	goto	u1121
   577  001104  EF86  F008         	goto	u1120
   578  001108                     u1121:
   579  001108  EF8E  F008         	goto	l2115
   580  00110C                     u1120:
   581  00110C  0E39               	movlw	57
   582  00110E  6432               	cpfsgt	(main@tu8DataFromEEPROM+14)^0,c
   583  001110  EF8C  F008         	goto	u1131
   584  001114  EF8E  F008         	goto	u1130
   585  001118                     u1131:
   586  001118  EF92  F008         	goto	l2117
   587  00111C                     u1130:
   588  00111C                     l2115:
   589                           
   590                           ;main.c: 85:     {;main.c: 86:         u8Cpt = 0;
   591  00111C  0E00               	movlw	0
   592  00111E  6E3B               	movwf	main@u8Cpt^0,c
   593                           
   594                           ;main.c: 87:     }
   595  001120  EFA8  F008         	goto	l2125
   596  001124                     l2117:
   597                           
   598                           ;main.c: 89:     {;main.c: 90:         u8Cpt = ((tu8DataFromEEPROM[12]-0x30)*100)+((tu8D
      +                          ataFromEEPROM[13]-0x30)*10)+(tu8DataFromEEPROM[14]-0x30);
   599  001124  5031               	movf	(main@tu8DataFromEEPROM+13)^0,w,c
   600  001126  0D0A               	mullw	10
   601  001128  CFF3 F013          	movff	prodl,??_main
   602  00112C  5030               	movf	(main@tu8DataFromEEPROM+12)^0,w,c
   603  00112E  0D64               	mullw	100
   604  001130  50F3               	movf	243,w,c
   605  001132  2413               	addwf	??_main^0,w,c
   606  001134  2432               	addwf	(main@tu8DataFromEEPROM+14)^0,w,c
   607  001136  0F30               	addlw	48
   608  001138  6E3B               	movwf	main@u8Cpt^0,c
   609  00113A                     
   610                           ;main.c: 91:         if(u8Cpt>99)
   611  00113A  0E63               	movlw	99
   612  00113C  643B               	cpfsgt	main@u8Cpt^0,c
   613  00113E  EFA3  F008         	goto	u1141
   614  001142  EFA5  F008         	goto	u1140
   615  001146                     u1141:
   616  001146  EFA7  F008         	goto	l2123
   617  00114A                     u1140:
   618  00114A  EF8E  F008         	goto	l2115
   619  00114E                     l2123:
   620                           
   621                           ;main.c: 96:         {;main.c: 97:             u8Cpt++;
   622  00114E  2A3B               	incf	main@u8Cpt^0,f,c
   623  001150                     l2125:
   624                           
   625                           ;main.c: 100:     tu8Data[12] = (u8Cpt/100)+0x30;
   626  001150  C03B  F001         	movff	main@u8Cpt,___awdiv@dividend
   627  001154  6A02               	clrf	(___awdiv@dividend+1)^0,c
   628  001156  0E00               	movlw	0
   629  001158  6E04               	movwf	(___awdiv@divisor+1)^0,c
   630  00115A  0E64               	movlw	100
   631  00115C  6E03               	movwf	___awdiv@divisor^0,c
   632  00115E  ECE5  F009         	call	___awdiv	;wreg free
   633  001162  5001               	movf	?___awdiv^0,w,c
   634  001164  0F30               	addlw	48
   635  001166  6E20               	movwf	(main@tu8Data+12)^0,c
   636  001168                     
   637                           ;main.c: 101:     tu8Data[13] = ((u8Cpt-(u8Cpt/100))/10)+0x30;
   638  001168  0E00               	movlw	0
   639  00116A  6E04               	movwf	(___awdiv@divisor+1)^0,c
   640  00116C  0E64               	movlw	100
   641  00116E  6E03               	movwf	___awdiv@divisor^0,c
   642  001170  C03B  F001         	movff	main@u8Cpt,___awdiv@dividend
   643  001174  6A02               	clrf	(___awdiv@dividend+1)^0,c
   644  001176  ECE5  F009         	call	___awdiv	;wreg free
   645  00117A  5001               	movf	?___awdiv^0,w,c
   646  00117C  5C3B               	subwf	main@u8Cpt^0,w,c
   647  00117E  6E38               	movwf	_main$1411^0,c
   648  001180  5002               	movf	(?___awdiv+1)^0,w,c
   649  001182  A0D8               	btfss	status,0,c
   650  001184  2802               	incf	(?___awdiv+1)^0,w,c
   651  001186  6A39               	clrf	(_main$1411+1)^0,c
   652  001188  5E39               	subwf	(_main$1411+1)^0,f,c
   653  00118A                     
   654                           ;main.c: 101:     tu8Data[13] = ((u8Cpt-(u8Cpt/100))/10)+0x30;
   655  00118A  C038  F001         	movff	_main$1411,___awdiv@dividend
   656  00118E  C039  F002         	movff	_main$1411+1,___awdiv@dividend+1
   657  001192  0E00               	movlw	0
   658  001194  6E04               	movwf	(___awdiv@divisor+1)^0,c
   659  001196  0E0A               	movlw	10
   660  001198  6E03               	movwf	___awdiv@divisor^0,c
   661  00119A  ECE5  F009         	call	___awdiv	;wreg free
   662  00119E  5001               	movf	?___awdiv^0,w,c
   663  0011A0  0F30               	addlw	48
   664  0011A2  6E21               	movwf	(main@tu8Data+13)^0,c
   665  0011A4                     
   666                           ;main.c: 102:     tu8Data[14] = (u8Cpt-(u8Cpt/100)-((u8Cpt-(u8Cpt/100))/10))+0x30;
   667  0011A4  0E00               	movlw	0
   668  0011A6  6E04               	movwf	(___awdiv@divisor+1)^0,c
   669  0011A8  0E64               	movlw	100
   670  0011AA  6E03               	movwf	___awdiv@divisor^0,c
   671  0011AC  C03B  F001         	movff	main@u8Cpt,___awdiv@dividend
   672  0011B0  6A02               	clrf	(___awdiv@dividend+1)^0,c
   673  0011B2  ECE5  F009         	call	___awdiv	;wreg free
   674  0011B6  5001               	movf	?___awdiv^0,w,c
   675  0011B8  5C3B               	subwf	main@u8Cpt^0,w,c
   676  0011BA  6E38               	movwf	_main$1411^0,c
   677  0011BC  5002               	movf	(?___awdiv+1)^0,w,c
   678  0011BE  A0D8               	btfss	status,0,c
   679  0011C0  2802               	incf	(?___awdiv+1)^0,w,c
   680  0011C2  6A39               	clrf	(_main$1411+1)^0,c
   681  0011C4  5E39               	subwf	(_main$1411+1)^0,f,c
   682  0011C6                     
   683                           ;main.c: 102:     tu8Data[14] = (u8Cpt-(u8Cpt/100)-((u8Cpt-(u8Cpt/100))/10))+0x30;
   684  0011C6  C03B  F001         	movff	main@u8Cpt,___awdiv@dividend
   685  0011CA  6A02               	clrf	(___awdiv@dividend+1)^0,c
   686  0011CC  0E00               	movlw	0
   687  0011CE  6E04               	movwf	(___awdiv@divisor+1)^0,c
   688  0011D0  0E64               	movlw	100
   689  0011D2  6E03               	movwf	___awdiv@divisor^0,c
   690  0011D4  ECE5  F009         	call	___awdiv	;wreg free
   691  0011D8  5001               	movf	?___awdiv^0,w,c
   692  0011DA  0800               	sublw	0
   693  0011DC  6E13               	movwf	??_main^0,c
   694  0011DE  C038  F001         	movff	_main$1411,___awdiv@dividend
   695  0011E2  C039  F002         	movff	_main$1411+1,___awdiv@dividend+1
   696  0011E6  0E00               	movlw	0
   697  0011E8  6E04               	movwf	(___awdiv@divisor+1)^0,c
   698  0011EA  0E0A               	movlw	10
   699  0011EC  6E03               	movwf	___awdiv@divisor^0,c
   700  0011EE  ECE5  F009         	call	___awdiv	;wreg free
   701  0011F2  5001               	movf	?___awdiv^0,w,c
   702  0011F4  5C13               	subwf	??_main^0,w,c
   703  0011F6  243B               	addwf	main@u8Cpt^0,w,c
   704  0011F8  0F30               	addlw	48
   705  0011FA  6E22               	movwf	(main@tu8Data+14)^0,c
   706  0011FC                     
   707                           ;main.c: 105:     EEP_SPI_WriteBytes(0x00, (uint8_t *)&tu8Data, 16);
   708  0011FC  0E14               	movlw	low main@tu8Data
   709  0011FE  6E0C               	movwf	EEP_SPI_WriteBytes@Fpu8Data^0,c
   710  001200  0E00               	movlw	high main@tu8Data
   711  001202  6E0D               	movwf	(EEP_SPI_WriteBytes@Fpu8Data+1)^0,c
   712  001204  0E10               	movlw	16
   713  001206  6E0E               	movwf	EEP_SPI_WriteBytes@Fu8Size^0,c
   714  001208  0E00               	movlw	0
   715  00120A  EC01  F00C         	call	_EEP_SPI_WriteBytes
   716  00120E                     l62:
   717  00120E  EF07  F009         	goto	l62
   718  001212  EF00  F000         	goto	start
   719  001216                     __end_of_main:
   720                           	opt callstack 0
   721                           
   722 ;; *************** function _initialisation_des_ports *****************
   723 ;; Defined at:
   724 ;;		line 15 in file "main.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;		None
   727 ;; Auto vars:     Size  Location     Type
   728 ;;		None
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      void 
   731 ;; Registers used:
   732 ;;		wreg, status,2
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;Total ram usage:        0 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; This function calls:
   745 ;;		Nothing
   746 ;; This function is called by:
   747 ;;		_main
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text1
   752  0019D6                     __ptext1:
   753                           	opt callstack 0
   754  0019D6                     _initialisation_des_ports:
   755                           	opt callstack 30
   756  0019D6                     
   757                           ;main.c: 18:     MEMCON=0xA0;
   758  0019D6  0EA0               	movlw	160
   759  0019D8  010F               	movlb	15	; () banked
   760  0019DA  6F26               	movwf	38,b	;volatile
   761                           
   762                           ;main.c: 21:     ANCON0=0x03;
   763  0019DC  0E03               	movlw	3
   764  0019DE  6F25               	movwf	37,b	;volatile
   765                           
   766                           ;main.c: 22:     ANCON1=0x08;
   767  0019E0  0E08               	movlw	8
   768  0019E2  6F24               	movwf	36,b	;volatile
   769                           
   770                           ;main.c: 23:     ANCON2=0x00;
   771  0019E4  0E00               	movlw	0
   772  0019E6  6F23               	movwf	35,b	;volatile
   773  0019E8                     
   774                           ; BSR set to: 15
   775                           ;main.c: 27:     LATCbits.LATC2=0;
   776  0019E8  948B               	bcf	139,2,c	;volatile
   777  0019EA                     
   778                           ; BSR set to: 15
   779                           ;main.c: 28:     LATCbits.LATC1=0;
   780  0019EA  928B               	bcf	139,1,c	;volatile
   781  0019EC                     
   782                           ; BSR set to: 15
   783                           ;main.c: 29:     LATGbits.LATG0=0;
   784  0019EC  908F               	bcf	143,0,c	;volatile
   785  0019EE                     
   786                           ; BSR set to: 15
   787                           ;main.c: 32:     TRISAbits.TRISA2=0;
   788  0019EE  9492               	bcf	146,2,c	;volatile
   789  0019F0                     
   790                           ; BSR set to: 15
   791                           ;main.c: 33:     TRISAbits.TRISA3=0;
   792  0019F0  9692               	bcf	146,3,c	;volatile
   793  0019F2                     
   794                           ; BSR set to: 15
   795                           ;main.c: 34:     TRISAbits.TRISA4=0;
   796  0019F2  9892               	bcf	146,4,c	;volatile
   797  0019F4                     
   798                           ; BSR set to: 15
   799                           ;main.c: 35:     TRISAbits.TRISA5=0;
   800  0019F4  9A92               	bcf	146,5,c	;volatile
   801  0019F6                     
   802                           ; BSR set to: 15
   803                           ;main.c: 36:     TRISCbits.TRISC2=0;
   804  0019F6  9494               	bcf	148,2,c	;volatile
   805  0019F8                     
   806                           ; BSR set to: 15
   807                           ;main.c: 37:     TRISCbits.TRISC1=0;
   808  0019F8  9294               	bcf	148,1,c	;volatile
   809  0019FA                     
   810                           ; BSR set to: 15
   811                           ;main.c: 38:     TRISGbits.TRISG0=0;
   812  0019FA  9098               	bcf	152,0,c	;volatile
   813  0019FC                     
   814                           ; BSR set to: 15
   815                           ;main.c: 41:     INTCON2bits.RBPU=0;
   816  0019FC  9EF1               	bcf	241,7,c	;volatile
   817  0019FE                     
   818                           ; BSR set to: 15
   819                           ;main.c: 42:     PADCFG1bits.REPU=1;
   820  0019FE  8D53               	bsf	83,6,b	;volatile
   821  001A00                     
   822                           ; BSR set to: 15
   823  001A00  0012               	return		;funcret
   824  001A02                     __end_of_initialisation_des_ports:
   825                           	opt callstack 0
   826                           
   827 ;; *************** function _initialisation_afficheur *****************
   828 ;; Defined at:
   829 ;;		line 165 in file "afficheur.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  error_count     1    8[COMRAM] unsigned char 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, status,2, status,0, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;Total ram usage:        1 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; Hardware stack levels required when called:    3
   850 ;; This function calls:
   851 ;;		_check_status_ok
   852 ;;		_command
   853 ;;		_d1command
   854 ;;		_d2command
   855 ;;		_delai_us_char
   856 ;; This function is called by:
   857 ;;		_main
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           	psect	text2
   862  001216                     __ptext2:
   863                           	opt callstack 0
   864  001216                     _initialisation_afficheur:
   865                           	opt callstack 27
   866  001216                     
   867                           ;afficheur.c: 168:     unsigned char error_count;;afficheur.c: 170:     error_count=0;
   868  001216  0E00               	movlw	0
   869  001218  6E09               	movwf	initialisation_afficheur@error_count^0,c
   870                           
   871                           ;afficheur.c: 173:     LATH=0;
   872  00121A  0E00               	movlw	0
   873  00121C  6E90               	movwf	144,c	;volatile
   874                           
   875                           ;afficheur.c: 174:     LATJ=0x1F;
   876  00121E  0E1F               	movlw	31
   877  001220  6E91               	movwf	145,c	;volatile
   878                           
   879                           ;afficheur.c: 177:     TRISH=0;
   880  001222  0E00               	movlw	0
   881  001224  6E99               	movwf	153,c	;volatile
   882                           
   883                           ;afficheur.c: 178:     TRISJ=0;
   884  001226  0E00               	movlw	0
   885  001228  6E9A               	movwf	154,c	;volatile
   886  00122A                     
   887                           ;afficheur.c: 181:     LATJbits.LATJ5=0;
   888  00122A  9A91               	bcf	145,5,c	;volatile
   889  00122C                     
   890                           ;afficheur.c: 182:     LATJbits.LATJ6=1;
   891  00122C  8C91               	bsf	145,6,c	;volatile
   892  00122E                     
   893                           ;afficheur.c: 185:     LATJbits.LATJ4=0;
   894  00122E  9891               	bcf	145,4,c	;volatile
   895  001230                     
   896                           ;afficheur.c: 186:     delai_us_char(4);
   897  001230  0E04               	movlw	4
   898  001232  ECA7  F00C         	call	_delai_us_char
   899  001236                     
   900                           ;afficheur.c: 187:     LATJbits.LATJ4=1;
   901  001236  8891               	bsf	145,4,c	;volatile
   902  001238                     
   903                           ;afficheur.c: 191:     delai_us_char(12);
   904  001238  0E0C               	movlw	12
   905  00123A  ECA7  F00C         	call	_delai_us_char
   906                           
   907                           ;afficheur.c: 192:     while(check_status_ok()==00)
   908  00123E  EF32  F009         	goto	l1955
   909  001242                     l1945:
   910                           
   911                           ;afficheur.c: 193:     {;afficheur.c: 194:         error_count++;
   912  001242  2A09               	incf	initialisation_afficheur@error_count^0,f,c
   913  001244                     
   914                           ;afficheur.c: 195:         delai_us_char(12);
   915  001244  0E0C               	movlw	12
   916  001246  ECA7  F00C         	call	_delai_us_char
   917  00124A                     
   918                           ;afficheur.c: 196:         if (error_count>200)
   919  00124A  0EC8               	movlw	200
   920  00124C  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
   921  00124E  EF2B  F009         	goto	u911
   922  001252  EF2D  F009         	goto	u910
   923  001256                     u911:
   924  001256  EF32  F009         	goto	l1955
   925  00125A                     u910:
   926  00125A                     
   927                           ;afficheur.c: 197:         {;afficheur.c: 198:             LATCbits.LATC1=1;LATGbits.LAT
      +                          G0=1;LATCbits.LATC2=0;
   928  00125A  828B               	bsf	139,1,c	;volatile
   929  00125C  808F               	bsf	143,0,c	;volatile
   930  00125E  948B               	bcf	139,2,c	;volatile
   931  001260                     
   932                           ;afficheur.c: 201:             error_count=0;
   933  001260  0E00               	movlw	0
   934  001262  6E09               	movwf	initialisation_afficheur@error_count^0,c
   935  001264                     l1955:
   936                           
   937                           ;afficheur.c: 192:     while(check_status_ok()==00)
   938  001264  EC1F  F00C         	call	_check_status_ok	;wreg free
   939  001268  0900               	iorlw	0
   940  00126A  B4D8               	btfsc	status,2,c
   941  00126C  EF3A  F009         	goto	u921
   942  001270  EF3C  F009         	goto	u920
   943  001274                     u921:
   944  001274  EF21  F009         	goto	l1945
   945  001278                     u920:
   946  001278                     
   947                           ;afficheur.c: 206:     d2command(39,15,0x21);
   948  001278  0E0F               	movlw	15
   949  00127A  6E05               	movwf	d2command@d2^0,c
   950  00127C  0E21               	movlw	33
   951  00127E  6E06               	movwf	d2command@cmd^0,c
   952  001280  0E27               	movlw	39
   953  001282  EC53  F00B         	call	_d2command
   954                           
   955                           ;afficheur.c: 207:     d2command(0,0,0x22);
   956  001286  0E00               	movlw	0
   957  001288  6E05               	movwf	d2command@d2^0,c
   958  00128A  0E22               	movlw	34
   959  00128C  6E06               	movwf	d2command@cmd^0,c
   960  00128E  0E00               	movlw	0
   961  001290  EC53  F00B         	call	_d2command
   962                           
   963                           ;afficheur.c: 208:     d2command(0,0,0x24);
   964  001294  0E00               	movlw	0
   965  001296  6E05               	movwf	d2command@d2^0,c
   966  001298  0E24               	movlw	36
   967  00129A  6E06               	movwf	d2command@cmd^0,c
   968  00129C  0E00               	movlw	0
   969  00129E  EC53  F00B         	call	_d2command
   970                           
   971                           ;afficheur.c: 211:     d2command(0,0x7B,0x40);
   972  0012A2  0E7B               	movlw	123
   973  0012A4  6E05               	movwf	d2command@d2^0,c
   974  0012A6  0E40               	movlw	64
   975  0012A8  6E06               	movwf	d2command@cmd^0,c
   976  0012AA  0E00               	movlw	0
   977  0012AC  EC53  F00B         	call	_d2command
   978                           
   979                           ;afficheur.c: 212:     d2command(40,0,0x41);
   980  0012B0  0E00               	movlw	0
   981  0012B2  6E05               	movwf	d2command@d2^0,c
   982  0012B4  0E41               	movlw	65
   983  0012B6  6E06               	movwf	d2command@cmd^0,c
   984  0012B8  0E28               	movlw	40
   985  0012BA  EC53  F00B         	call	_d2command
   986                           
   987                           ;afficheur.c: 213:     d2command(0x00,0x80,0x42);
   988  0012BE  0E80               	movlw	128
   989  0012C0  6E05               	movwf	d2command@d2^0,c
   990  0012C2  0E42               	movlw	66
   991  0012C4  6E06               	movwf	d2command@cmd^0,c
   992  0012C6  0E00               	movlw	0
   993  0012C8  EC53  F00B         	call	_d2command
   994                           
   995                           ;afficheur.c: 214:     d2command(40,0,0x43);
   996  0012CC  0E00               	movlw	0
   997  0012CE  6E05               	movwf	d2command@d2^0,c
   998  0012D0  0E43               	movlw	67
   999  0012D2  6E06               	movwf	d2command@cmd^0,c
  1000  0012D4  0E28               	movlw	40
  1001  0012D6  EC53  F00B         	call	_d2command
  1002                           
  1003                           ;afficheur.c: 217:     command(0x80);
  1004  0012DA  0E80               	movlw	128
  1005  0012DC  EC01  F00D         	call	_command
  1006                           
  1007                           ;afficheur.c: 220:     command(0x9C);
  1008  0012E0  0E9C               	movlw	156
  1009  0012E2  EC01  F00D         	call	_command
  1010                           
  1011                           ;afficheur.c: 223:     command(0xA0);
  1012  0012E6  0EA0               	movlw	160
  1013  0012E8  EC01  F00D         	call	_command
  1014                           
  1015                           ;afficheur.c: 226:     d1command(0x02,0x70);
  1016  0012EC  0E70               	movlw	112
  1017  0012EE  6E05               	movwf	d1command@cmd^0,c
  1018  0012F0  0E02               	movlw	2
  1019  0012F2  ECB4  F00B         	call	_d1command
  1020  0012F6  0012               	return		;funcret
  1021  0012F8                     __end_of_initialisation_afficheur:
  1022                           	opt callstack 0
  1023                           
  1024 ;; *************** function _check_status_ok *****************
  1025 ;; Defined at:
  1026 ;;		line 31 in file "afficheur.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;  res             1    0[COMRAM] unsigned char 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      unsigned char 
  1033 ;; Registers used:
  1034 ;;		wreg, status,2, status,0
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;Total ram usage:        1 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_initialisation_afficheur
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text3
  1054  00183E                     __ptext3:
  1055                           	opt callstack 0
  1056  00183E                     _check_status_ok:
  1057                           	opt callstack 29
  1058  00183E                     
  1059                           ;afficheur.c: 33:     unsigned char res;;afficheur.c: 36:     TRISH=0xFF;
  1060  00183E  6899               	setf	153,c	;volatile
  1061                           
  1062                           ;afficheur.c: 37:     LATJbits.LATJ0=1;
  1063  001840  8091               	bsf	145,0,c	;volatile
  1064                           
  1065                           ;afficheur.c: 38:     LATJbits.LATJ3=0;
  1066  001842  9691               	bcf	145,3,c	;volatile
  1067                           
  1068                           ;afficheur.c: 39:     LATJbits.LATJ1=0;
  1069  001844  9291               	bcf	145,1,c	;volatile
  1070                           
  1071                           ;afficheur.c: 40:     __nop();
  1072  001846  F000               	nop	
  1073                           
  1074                           ;afficheur.c: 41:     __nop();
  1075  001848  F000               	nop	
  1076                           
  1077                           ;afficheur.c: 42:     __nop();
  1078  00184A  F000               	nop	
  1079                           
  1080                           ;afficheur.c: 43:     res=PORTH;
  1081  00184C  CF87 F001          	movff	3975,check_status_ok@res	;volatile
  1082                           
  1083                           ;afficheur.c: 44:     LATJbits.LATJ1=1;
  1084  001850  8291               	bsf	145,1,c	;volatile
  1085                           
  1086                           ;afficheur.c: 45:     LATJbits.LATJ3=1;
  1087  001852  8691               	bsf	145,3,c	;volatile
  1088  001854                     
  1089                           ;afficheur.c: 47:     if ((res&0x03)==0x03)
  1090  001854  5001               	movf	check_status_ok@res^0,w,c
  1091  001856  0B03               	andlw	3
  1092  001858  0A03               	xorlw	3
  1093  00185A  A4D8               	btfss	status,2,c
  1094  00185C  EF32  F00C         	goto	u871
  1095  001860  EF34  F00C         	goto	u870
  1096  001864                     u871:
  1097  001864  EF38  F00C         	goto	l1841
  1098  001868                     u870:
  1099  001868                     
  1100                           ;afficheur.c: 48:         res=1;
  1101  001868  0E01               	movlw	1
  1102  00186A  6E01               	movwf	check_status_ok@res^0,c
  1103  00186C  EF3A  F00C         	goto	l95
  1104  001870                     l1841:
  1105                           
  1106                           ;afficheur.c: 50:         res=0;
  1107  001870  0E00               	movlw	0
  1108  001872  6E01               	movwf	check_status_ok@res^0,c
  1109  001874                     l95:
  1110                           
  1111                           ;afficheur.c: 51:     return res;
  1112  001874  5001               	movf	check_status_ok@res^0,w,c
  1113  001876  0012               	return		;funcret
  1114  001878                     __end_of_check_status_ok:
  1115                           	opt callstack 0
  1116                           
  1117 ;; *************** function _goto_lico *****************
  1118 ;; Defined at:
  1119 ;;		line 276 in file "afficheur.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  ligne           1    wreg     unsigned char 
  1122 ;;  colonne         1    8[COMRAM] unsigned char 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  ligne           1   11[COMRAM] unsigned char 
  1125 ;;  adr             2   12[COMRAM] unsigned int 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1135 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1138 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1139 ;;Total ram usage:        6 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    3
  1142 ;; This function calls:
  1143 ;;		_d2command
  1144 ;; This function is called by:
  1145 ;;		_main
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text4
  1150  0015B8                     __ptext4:
  1151                           	opt callstack 0
  1152  0015B8                     _goto_lico:
  1153                           	opt callstack 27
  1154                           
  1155                           ;incstack = 0
  1156                           ;goto_lico@ligne stored from wreg
  1157  0015B8  6E0C               	movwf	goto_lico@ligne^0,c
  1158  0015BA                     
  1159                           ;afficheur.c: 276: void goto_lico(unsigned char ligne, unsigned char colonne);afficheur.
      +                          c: 277: {;afficheur.c: 278:     unsigned int adr;;afficheur.c: 280:     adr=0x7B00;
  1160  0015BA  0E7B               	movlw	123
  1161  0015BC  6E0E               	movwf	(goto_lico@adr+1)^0,c
  1162  0015BE  0E00               	movlw	0
  1163  0015C0  6E0D               	movwf	goto_lico@adr^0,c
  1164  0015C2                     
  1165                           ;afficheur.c: 281:     if (ligne>15) ligne=0;
  1166  0015C2  0E0F               	movlw	15
  1167  0015C4  640C               	cpfsgt	goto_lico@ligne^0,c
  1168  0015C6  EFE7  F00A         	goto	u951
  1169  0015CA  EFE9  F00A         	goto	u950
  1170  0015CE                     u951:
  1171  0015CE  EFEB  F00A         	goto	l2007
  1172  0015D2                     u950:
  1173  0015D2  0E00               	movlw	0
  1174  0015D4  6E0C               	movwf	goto_lico@ligne^0,c
  1175  0015D6                     l2007:
  1176                           
  1177                           ;afficheur.c: 282:     if (colonne>39) colonne=0;
  1178  0015D6  0E27               	movlw	39
  1179  0015D8  6409               	cpfsgt	goto_lico@colonne^0,c
  1180  0015DA  EFF1  F00A         	goto	u961
  1181  0015DE  EFF3  F00A         	goto	u960
  1182  0015E2                     u961:
  1183  0015E2  EFF5  F00A         	goto	l2011
  1184  0015E6                     u960:
  1185  0015E6  0E00               	movlw	0
  1186  0015E8  6E09               	movwf	goto_lico@colonne^0,c
  1187  0015EA                     l2011:
  1188                           
  1189                           ;afficheur.c: 283:     adr=adr+40*ligne+colonne;
  1190  0015EA  500C               	movf	goto_lico@ligne^0,w,c
  1191  0015EC  0D28               	mullw	40
  1192  0015EE  CFF3 F00A          	movff	prodl,??_goto_lico
  1193  0015F2  CFF4 F00B          	movff	prodh,??_goto_lico+1
  1194  0015F6  5009               	movf	goto_lico@colonne^0,w,c
  1195  0015F8  260A               	addwf	??_goto_lico^0,f,c
  1196  0015FA  0E00               	movlw	0
  1197  0015FC  220B               	addwfc	(??_goto_lico+1)^0,f,c
  1198  0015FE  500D               	movf	goto_lico@adr^0,w,c
  1199  001600  240A               	addwf	??_goto_lico^0,w,c
  1200  001602  6E0D               	movwf	goto_lico@adr^0,c
  1201  001604  500E               	movf	(goto_lico@adr+1)^0,w,c
  1202  001606  200B               	addwfc	(??_goto_lico+1)^0,w,c
  1203  001608  6E0E               	movwf	(goto_lico@adr+1)^0,c
  1204                           
  1205                           ;afficheur.c: 284:     while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>
      +                          8),0x24)==0)
  1206  00160A  EF08  F00B         	goto	l2013
  1207  00160E                     l169:
  1208                           
  1209                           ;afficheur.c: 285:         __nop();
  1210  00160E  F000               	nop	
  1211  001610                     l2013:
  1212                           
  1213                           ;afficheur.c: 284:     while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>
      +                          8),0x24)==0)
  1214  001610  500E               	movf	(goto_lico@adr+1)^0,w,c
  1215  001612  6E05               	movwf	d2command@d2^0,c
  1216  001614  0E24               	movlw	36
  1217  001616  6E06               	movwf	d2command@cmd^0,c
  1218  001618  500D               	movf	goto_lico@adr^0,w,c
  1219  00161A  EC53  F00B         	call	_d2command
  1220  00161E  0900               	iorlw	0
  1221  001620  B4D8               	btfsc	status,2,c
  1222  001622  EF15  F00B         	goto	u971
  1223  001626  EF17  F00B         	goto	u970
  1224  00162A                     u971:
  1225  00162A  EF07  F00B         	goto	l169
  1226  00162E                     u970:
  1227  00162E  0012               	return		;funcret
  1228  001630                     __end_of_goto_lico:
  1229                           	opt callstack 0
  1230                           
  1231 ;; *************** function _draw_string *****************
  1232 ;; Defined at:
  1233 ;;		line 244 in file "afficheur.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  tableau         2    7[COMRAM] PTR unsigned char 
  1236 ;;		 -> STR_1(6), main@tu8DataFromEEPROM(20), 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1251 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;Total ram usage:        2 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    3
  1255 ;; This function calls:
  1256 ;;		_d1command
  1257 ;; This function is called by:
  1258 ;;		_main
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text5
  1263  00153E                     __ptext5:
  1264                           	opt callstack 0
  1265  00153E                     _draw_string:
  1266                           	opt callstack 27
  1267  00153E                     
  1268                           ;afficheur.c: 244: void draw_string(unsigned char * tableau);afficheur.c: 245: {;affiche
      +                          ur.c: 246:     while(tableau[0]!=0)
  1269  00153E  EFC2  F00A         	goto	l2021
  1270  001542                     l147:
  1271                           
  1272                           ;afficheur.c: 249:             __nop();
  1273  001542  F000               	nop	
  1274  001544                     l2017:
  1275                           
  1276                           ;afficheur.c: 248:         while(d1command(tableau[0]-32,0xC0)==0)
  1277  001544  0EC0               	movlw	192
  1278  001546  6E05               	movwf	d1command@cmd^0,c
  1279  001548  C008  FFF6         	movff	draw_string@tableau,tblptrl
  1280  00154C  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  1281  001550  0E00               	movlw	low (__smallconst shr (0+16))
  1282  001552  6EF8               	movwf	tblptru,c
  1283  001554  0E0F               	movlw	(high __ramtop+-1)
  1284  001556  64F7               	cpfsgt	tblptrh,c
  1285  001558  D003               	bra	u987
  1286  00155A  0008               	tblrd		*
  1287  00155C  50F5               	movf	tablat,w,c
  1288  00155E  D005               	bra	u980
  1289  001560                     u987:
  1290  001560  CFF6 FFE1          	movff	tblptrl,fsr1l
  1291  001564  CFF7 FFE2          	movff	tblptrh,fsr1h
  1292  001568  50E7               	movf	indf1,w,c
  1293  00156A                     u980:
  1294  00156A  0FE0               	addlw	224
  1295  00156C  ECB4  F00B         	call	_d1command
  1296  001570  0900               	iorlw	0
  1297  001572  B4D8               	btfsc	status,2,c
  1298  001574  EFBE  F00A         	goto	u991
  1299  001578  EFC0  F00A         	goto	u990
  1300  00157C                     u991:
  1301  00157C  EFA1  F00A         	goto	l147
  1302  001580                     u990:
  1303  001580                     
  1304                           ;afficheur.c: 250:         tableau++;
  1305  001580  4A08               	infsnz	draw_string@tableau^0,f,c
  1306  001582  2A09               	incf	(draw_string@tableau+1)^0,f,c
  1307  001584                     l2021:
  1308                           
  1309                           ;afficheur.c: 246:     while(tableau[0]!=0)
  1310  001584  C008  FFF6         	movff	draw_string@tableau,tblptrl
  1311  001588  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  1312  00158C  0E00               	movlw	low (__smallconst shr (0+16))
  1313  00158E  6EF8               	movwf	tblptru,c
  1314  001590  0E0F               	movlw	(high __ramtop+-1)
  1315  001592  64F7               	cpfsgt	tblptrh,c
  1316  001594  D003               	bra	u1007
  1317  001596  0008               	tblrd		*
  1318  001598  50F5               	movf	tablat,w,c
  1319  00159A  D005               	bra	u1000
  1320  00159C                     u1007:
  1321  00159C  CFF6 FFE1          	movff	tblptrl,fsr1l
  1322  0015A0  CFF7 FFE2          	movff	tblptrh,fsr1h
  1323  0015A4  50E7               	movf	indf1,w,c
  1324  0015A6                     u1000:
  1325  0015A6  0900               	iorlw	0
  1326  0015A8  A4D8               	btfss	status,2,c
  1327  0015AA  EFD9  F00A         	goto	u1011
  1328  0015AE  EFDB  F00A         	goto	u1010
  1329  0015B2                     u1011:
  1330  0015B2  EFA2  F00A         	goto	l2017
  1331  0015B6                     u1010:
  1332  0015B6  0012               	return		;funcret
  1333  0015B8                     __end_of_draw_string:
  1334                           	opt callstack 0
  1335                           
  1336 ;; *************** function _drawVericalLine *****************
  1337 ;; Defined at:
  1338 ;;		line 363 in file "afficheur.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  ligne           1    wreg     unsigned char 
  1341 ;;  colonne         1   14[COMRAM] unsigned char 
  1342 ;;  lenght          1   15[COMRAM] unsigned char 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  ligne           1   16[COMRAM] unsigned char 
  1345 ;;  index           1   17[COMRAM] unsigned char 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;Total ram usage:        4 bytes
  1360 ;; Hardware stack levels used:    1
  1361 ;; Hardware stack levels required when called:    4
  1362 ;; This function calls:
  1363 ;;		_plot1
  1364 ;; This function is called by:
  1365 ;;		_main
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           	psect	text6
  1370  00191E                     __ptext6:
  1371                           	opt callstack 0
  1372  00191E                     _drawVericalLine:
  1373                           	opt callstack 26
  1374                           
  1375                           ;incstack = 0
  1376                           ;drawVericalLine@ligne stored from wreg
  1377  00191E  6E11               	movwf	drawVericalLine@ligne^0,c
  1378  001920                     
  1379                           ;afficheur.c: 363: void drawVericalLine(unsigned char ligne, unsigned char colonne, unsi
      +                          gned char lenght);afficheur.c: 364: {;afficheur.c: 365:     unsigned char index = 0;
  1380  001920  0E00               	movlw	0
  1381  001922  6E12               	movwf	drawVericalLine@index^0,c
  1382                           
  1383                           ;afficheur.c: 367:     for(index=0; index<lenght; index++)
  1384  001924  0E00               	movlw	0
  1385  001926  6E12               	movwf	drawVericalLine@index^0,c
  1386  001928  EF9D  F00C         	goto	l2029
  1387  00192C                     l2025:
  1388                           
  1389                           ;afficheur.c: 368:     {;afficheur.c: 369:         plot1(colonne, ligne+index);
  1390  00192C  5011               	movf	drawVericalLine@ligne^0,w,c
  1391  00192E  2412               	addwf	drawVericalLine@index^0,w,c
  1392  001930  6E09               	movwf	plot1@y^0,c
  1393  001932  500F               	movf	drawVericalLine@colonne^0,w,c
  1394  001934  EC7C  F009         	call	_plot1
  1395  001938                     
  1396                           ;afficheur.c: 370:     }
  1397  001938  2A12               	incf	drawVericalLine@index^0,f,c
  1398  00193A                     l2029:
  1399  00193A  5010               	movf	drawVericalLine@lenght^0,w,c
  1400  00193C  5C12               	subwf	drawVericalLine@index^0,w,c
  1401  00193E  A0D8               	btfss	status,0,c
  1402  001940  EFA4  F00C         	goto	u1021
  1403  001944  EFA6  F00C         	goto	u1020
  1404  001948                     u1021:
  1405  001948  EF96  F00C         	goto	l2025
  1406  00194C                     u1020:
  1407  00194C  0012               	return		;funcret
  1408  00194E                     __end_of_drawVericalLine:
  1409                           	opt callstack 0
  1410                           
  1411 ;; *************** function _plot1 *****************
  1412 ;; Defined at:
  1413 ;;		line 321 in file "afficheur.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  x               1    wreg     unsigned char 
  1416 ;;  y               1    8[COMRAM] unsigned char 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  x               1   13[COMRAM] unsigned char 
  1419 ;;  add             2   11[COMRAM] unsigned int 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1429 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;Total ram usage:        6 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    3
  1436 ;; This function calls:
  1437 ;;		___awdiv
  1438 ;;		___awmod
  1439 ;;		_command
  1440 ;;		_d2command
  1441 ;; This function is called by:
  1442 ;;		_drawVericalLine
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text7
  1447  0012F8                     __ptext7:
  1448                           	opt callstack 0
  1449  0012F8                     _plot1:
  1450                           	opt callstack 26
  1451                           
  1452                           ;incstack = 0
  1453                           ;plot1@x stored from wreg
  1454  0012F8  6E0E               	movwf	plot1@x^0,c
  1455  0012FA                     
  1456                           ;afficheur.c: 321: void plot1(unsigned char x, unsigned char y);afficheur.c: 322: {;affi
      +                          cheur.c: 323:     unsigned int add;;afficheur.c: 325:     add=40*y+x/6;
  1457  0012FA  C00E  F001         	movff	plot1@x,___awdiv@dividend
  1458  0012FE  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1459  001300  0E00               	movlw	0
  1460  001302  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1461  001304  0E06               	movlw	6
  1462  001306  6E03               	movwf	___awdiv@divisor^0,c
  1463  001308  ECE5  F009         	call	___awdiv	;wreg free
  1464  00130C  5009               	movf	plot1@y^0,w,c
  1465  00130E  0D28               	mullw	40
  1466  001310  CFF3 F00A          	movff	prodl,??_plot1
  1467  001314  CFF4 F00B          	movff	prodh,??_plot1+1
  1468  001318  5001               	movf	?___awdiv^0,w,c
  1469  00131A  240A               	addwf	??_plot1^0,w,c
  1470  00131C  6E0C               	movwf	plot1@add^0,c
  1471  00131E  5002               	movf	(?___awdiv+1)^0,w,c
  1472  001320  200B               	addwfc	(??_plot1+1)^0,w,c
  1473  001322  6E0D               	movwf	(plot1@add+1)^0,c
  1474  001324                     
  1475                           ;afficheur.c: 326:     d2command((char)(add&0xff),(char)(add>>8),0x24);
  1476  001324  500D               	movf	(plot1@add+1)^0,w,c
  1477  001326  6E05               	movwf	d2command@d2^0,c
  1478  001328  0E24               	movlw	36
  1479  00132A  6E06               	movwf	d2command@cmd^0,c
  1480  00132C  500C               	movf	plot1@add^0,w,c
  1481  00132E  EC53  F00B         	call	_d2command
  1482                           
  1483                           ;afficheur.c: 328:     switch(x%6)
  1484  001332  EFB9  F009         	goto	l1883
  1485  001336                     l1869:
  1486  001336  0EFD               	movlw	253
  1487  001338  EC01  F00D         	call	_command
  1488  00133C  EFE4  F009         	goto	l198
  1489  001340                     l1871:
  1490  001340  0EFC               	movlw	252
  1491  001342  EC01  F00D         	call	_command
  1492  001346  EFE4  F009         	goto	l198
  1493  00134A                     l1873:
  1494  00134A  0EFB               	movlw	251
  1495  00134C  EC01  F00D         	call	_command
  1496  001350  EFE4  F009         	goto	l198
  1497  001354                     l1875:
  1498  001354  0EFA               	movlw	250
  1499  001356  EC01  F00D         	call	_command
  1500  00135A  EFE4  F009         	goto	l198
  1501  00135E                     l1877:
  1502  00135E  0EF9               	movlw	249
  1503  001360  EC01  F00D         	call	_command
  1504  001364  EFE4  F009         	goto	l198
  1505  001368                     l1879:
  1506  001368  0EF8               	movlw	248
  1507  00136A  EC01  F00D         	call	_command
  1508  00136E  EFE4  F009         	goto	l198
  1509  001372                     l1883:
  1510  001372  C00E  F001         	movff	plot1@x,___awmod@dividend
  1511  001376  6A02               	clrf	(___awmod@dividend+1)^0,c
  1512  001378  0E00               	movlw	0
  1513  00137A  6E04               	movwf	(___awmod@divisor+1)^0,c
  1514  00137C  0E06               	movlw	6
  1515  00137E  6E03               	movwf	___awmod@divisor^0,c
  1516  001380  EC47  F00A         	call	___awmod	;wreg free
  1517                           
  1518                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1519                           ; Switch size 1, requested type "simple"
  1520                           ; Number of cases is 1, Range of values is 0 to 0
  1521                           ; switch strategies available:
  1522                           ; Name         Instructions Cycles
  1523                           ; simple_byte            4     3 (average)
  1524                           ;	Chosen strategy is simple_byte
  1525  001384  5002               	movf	(?___awmod+1)^0,w,c
  1526  001386  0A00               	xorlw	0	; case 0
  1527  001388  B4D8               	btfsc	status,2,c
  1528  00138A  EFC9  F009         	goto	l2239
  1529  00138E  EFE4  F009         	goto	l198
  1530  001392                     l2239:
  1531                           
  1532                           ; Switch size 1, requested type "simple"
  1533                           ; Number of cases is 6, Range of values is 0 to 5
  1534                           ; switch strategies available:
  1535                           ; Name         Instructions Cycles
  1536                           ; simple_byte           19    10 (average)
  1537                           ;	Chosen strategy is simple_byte
  1538  001392  5001               	movf	?___awmod^0,w,c
  1539  001394  0A00               	xorlw	0	; case 0
  1540  001396  B4D8               	btfsc	status,2,c
  1541  001398  EF9B  F009         	goto	l1869
  1542  00139C  0A01               	xorlw	1	; case 1
  1543  00139E  B4D8               	btfsc	status,2,c
  1544  0013A0  EFA0  F009         	goto	l1871
  1545  0013A4  0A03               	xorlw	3	; case 2
  1546  0013A6  B4D8               	btfsc	status,2,c
  1547  0013A8  EFA5  F009         	goto	l1873
  1548  0013AC  0A01               	xorlw	1	; case 3
  1549  0013AE  B4D8               	btfsc	status,2,c
  1550  0013B0  EFAA  F009         	goto	l1875
  1551  0013B4  0A07               	xorlw	7	; case 4
  1552  0013B6  B4D8               	btfsc	status,2,c
  1553  0013B8  EFAF  F009         	goto	l1877
  1554  0013BC  0A01               	xorlw	1	; case 5
  1555  0013BE  B4D8               	btfsc	status,2,c
  1556  0013C0  EFB4  F009         	goto	l1879
  1557  0013C4  EFE4  F009         	goto	l198
  1558  0013C8                     l198:
  1559  0013C8  0012               	return		;funcret
  1560  0013CA                     __end_of_plot1:
  1561                           	opt callstack 0
  1562                           
  1563 ;; *************** function _command *****************
  1564 ;; Defined at:
  1565 ;;		line 91 in file "afficheur.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;  cmd             1    wreg     unsigned char 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  cmd             1    5[COMRAM] unsigned char 
  1570 ;;  res             1    0        unsigned char 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      unsigned char 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1583 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;Total ram usage:        2 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    2
  1587 ;; This function calls:
  1588 ;;		_delai_us_char
  1589 ;;		_wait_status_ok
  1590 ;;		_write_c_aff
  1591 ;; This function is called by:
  1592 ;;		_initialisation_afficheur
  1593 ;;		_plot1
  1594 ;;		_plot0
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text8
  1599  001A02                     __ptext8:
  1600                           	opt callstack 0
  1601  001A02                     _command:
  1602                           	opt callstack 27
  1603                           
  1604                           ;incstack = 0
  1605                           ;command@cmd stored from wreg
  1606  001A02  6E06               	movwf	command@cmd^0,c
  1607  001A04                     
  1608                           ;afficheur.c: 97:     if(wait_status_ok()==1)
  1609  001A04  EC18  F00B         	call	_wait_status_ok	;wreg free
  1610  001A08  06E8               	decf	wreg,f,c
  1611  001A0A  A4D8               	btfss	status,2,c
  1612  001A0C  EF0A  F00D         	goto	u681
  1613  001A10  EF0C  F00D         	goto	u680
  1614  001A14                     u681:
  1615  001A14  EF12  F00D         	goto	l109
  1616  001A18                     u680:
  1617  001A18                     
  1618                           ;afficheur.c: 98:     {;afficheur.c: 99:         delai_us_char(12);
  1619  001A18  0E0C               	movlw	12
  1620  001A1A  ECA7  F00C         	call	_delai_us_char
  1621  001A1E                     
  1622                           ;afficheur.c: 100:         write_c_aff(cmd);
  1623  001A1E  5006               	movf	command@cmd^0,w,c
  1624  001A20  EC20  F00D         	call	_write_c_aff
  1625  001A24                     l109:
  1626  001A24  0012               	return		;funcret
  1627  001A26                     __end_of_command:
  1628                           	opt callstack 0
  1629                           
  1630 ;; *************** function ___awmod *****************
  1631 ;; Defined at:
  1632 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;  dividend        2    0[COMRAM] int 
  1635 ;;  divisor         2    2[COMRAM] int 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  sign            1    5[COMRAM] unsigned char 
  1638 ;;  counter         1    4[COMRAM] unsigned char 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  2    0[COMRAM] int 
  1641 ;; Registers used:
  1642 ;;		wreg, status,2, status,0
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;Total ram usage:        6 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_plot1
  1658 ;;		_plot0
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           	psect	text9
  1663  00148E                     __ptext9:
  1664                           	opt callstack 0
  1665  00148E                     ___awmod:
  1666                           	opt callstack 28
  1667  00148E  0E00               	movlw	0
  1668  001490  6E06               	movwf	___awmod@sign^0,c
  1669  001492  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1670  001494  EF50  F00A         	goto	u810
  1671  001498  EF4E  F00A         	goto	u811
  1672  00149C                     u811:
  1673  00149C  EF56  F00A         	goto	l1807
  1674  0014A0                     u810:
  1675  0014A0  6C01               	negf	___awmod@dividend^0,c
  1676  0014A2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1677  0014A4  B0D8               	btfsc	status,0,c
  1678  0014A6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1679  0014A8  0E01               	movlw	1
  1680  0014AA  6E06               	movwf	___awmod@sign^0,c
  1681  0014AC                     l1807:
  1682  0014AC  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1683  0014AE  EF5D  F00A         	goto	u820
  1684  0014B2  EF5B  F00A         	goto	u821
  1685  0014B6                     u821:
  1686  0014B6  EF61  F00A         	goto	l1811
  1687  0014BA                     u820:
  1688  0014BA  6C03               	negf	___awmod@divisor^0,c
  1689  0014BC  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1690  0014BE  B0D8               	btfsc	status,0,c
  1691  0014C0  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1692  0014C2                     l1811:
  1693  0014C2  5003               	movf	___awmod@divisor^0,w,c
  1694  0014C4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1695  0014C6  B4D8               	btfsc	status,2,c
  1696  0014C8  EF68  F00A         	goto	u831
  1697  0014CC  EF6A  F00A         	goto	u830
  1698  0014D0                     u831:
  1699  0014D0  EF8E  F00A         	goto	l1827
  1700  0014D4                     u830:
  1701  0014D4  0E01               	movlw	1
  1702  0014D6  6E05               	movwf	___awmod@counter^0,c
  1703  0014D8  EF72  F00A         	goto	l1817
  1704  0014DC                     l1815:
  1705  0014DC  90D8               	bcf	status,0,c
  1706  0014DE  3603               	rlcf	___awmod@divisor^0,f,c
  1707  0014E0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1708  0014E2  2A05               	incf	___awmod@counter^0,f,c
  1709  0014E4                     l1817:
  1710  0014E4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1711  0014E6  EF77  F00A         	goto	u841
  1712  0014EA  EF79  F00A         	goto	u840
  1713  0014EE                     u841:
  1714  0014EE  EF6E  F00A         	goto	l1815
  1715  0014F2                     u840:
  1716  0014F2                     l1819:
  1717  0014F2  5003               	movf	___awmod@divisor^0,w,c
  1718  0014F4  5C01               	subwf	___awmod@dividend^0,w,c
  1719  0014F6  5004               	movf	(___awmod@divisor+1)^0,w,c
  1720  0014F8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1721  0014FA  A0D8               	btfss	status,0,c
  1722  0014FC  EF82  F00A         	goto	u851
  1723  001500  EF84  F00A         	goto	u850
  1724  001504                     u851:
  1725  001504  EF88  F00A         	goto	l1823
  1726  001508                     u850:
  1727  001508  5003               	movf	___awmod@divisor^0,w,c
  1728  00150A  5E01               	subwf	___awmod@dividend^0,f,c
  1729  00150C  5004               	movf	(___awmod@divisor+1)^0,w,c
  1730  00150E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1731  001510                     l1823:
  1732  001510  90D8               	bcf	status,0,c
  1733  001512  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1734  001514  3203               	rrcf	___awmod@divisor^0,f,c
  1735  001516  2E05               	decfsz	___awmod@counter^0,f,c
  1736  001518  EF79  F00A         	goto	l1819
  1737  00151C                     l1827:
  1738  00151C  5006               	movf	___awmod@sign^0,w,c
  1739  00151E  B4D8               	btfsc	status,2,c
  1740  001520  EF94  F00A         	goto	u861
  1741  001524  EF96  F00A         	goto	u860
  1742  001528                     u861:
  1743  001528  EF9A  F00A         	goto	l1831
  1744  00152C                     u860:
  1745  00152C  6C01               	negf	___awmod@dividend^0,c
  1746  00152E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1747  001530  B0D8               	btfsc	status,0,c
  1748  001532  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1749  001534                     l1831:
  1750  001534  C001  F001         	movff	___awmod@dividend,?___awmod
  1751  001538  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1752  00153C  0012               	return		;funcret
  1753  00153E                     __end_of___awmod:
  1754                           	opt callstack 0
  1755                           
  1756 ;; *************** function ___awdiv *****************
  1757 ;; Defined at:
  1758 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  dividend        2    0[COMRAM] int 
  1761 ;;  divisor         2    2[COMRAM] int 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  quotient        2    6[COMRAM] int 
  1764 ;;  sign            1    5[COMRAM] unsigned char 
  1765 ;;  counter         1    4[COMRAM] unsigned char 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  2    0[COMRAM] int 
  1768 ;; Registers used:
  1769 ;;		wreg, status,2, status,0
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1775 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1776 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;Total ram usage:        8 bytes
  1780 ;; Hardware stack levels used:    1
  1781 ;; This function calls:
  1782 ;;		Nothing
  1783 ;; This function is called by:
  1784 ;;		_main
  1785 ;;		_plot1
  1786 ;;		_plot0
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text10
  1791  0013CA                     __ptext10:
  1792                           	opt callstack 0
  1793  0013CA                     ___awdiv:
  1794                           	opt callstack 28
  1795  0013CA  0E00               	movlw	0
  1796  0013CC  6E06               	movwf	___awdiv@sign^0,c
  1797  0013CE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1798  0013D0  EFEE  F009         	goto	u750
  1799  0013D4  EFEC  F009         	goto	u751
  1800  0013D8                     u751:
  1801  0013D8  EFF4  F009         	goto	l1763
  1802  0013DC                     u750:
  1803  0013DC  6C03               	negf	___awdiv@divisor^0,c
  1804  0013DE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1805  0013E0  B0D8               	btfsc	status,0,c
  1806  0013E2  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1807  0013E4  0E01               	movlw	1
  1808  0013E6  6E06               	movwf	___awdiv@sign^0,c
  1809  0013E8                     l1763:
  1810  0013E8  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1811  0013EA  EFFB  F009         	goto	u760
  1812  0013EE  EFF9  F009         	goto	u761
  1813  0013F2                     u761:
  1814  0013F2  EF01  F00A         	goto	l1769
  1815  0013F6                     u760:
  1816  0013F6  6C01               	negf	___awdiv@dividend^0,c
  1817  0013F8  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1818  0013FA  B0D8               	btfsc	status,0,c
  1819  0013FC  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1820  0013FE  0E01               	movlw	1
  1821  001400  1A06               	xorwf	___awdiv@sign^0,f,c
  1822  001402                     l1769:
  1823  001402  0E00               	movlw	0
  1824  001404  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1825  001406  0E00               	movlw	0
  1826  001408  6E07               	movwf	___awdiv@quotient^0,c
  1827  00140A  5003               	movf	___awdiv@divisor^0,w,c
  1828  00140C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1829  00140E  B4D8               	btfsc	status,2,c
  1830  001410  EF0C  F00A         	goto	u771
  1831  001414  EF0E  F00A         	goto	u770
  1832  001418                     u771:
  1833  001418  EF36  F00A         	goto	l1791
  1834  00141C                     u770:
  1835  00141C  0E01               	movlw	1
  1836  00141E  6E05               	movwf	___awdiv@counter^0,c
  1837  001420  EF16  F00A         	goto	l1777
  1838  001424                     l1775:
  1839  001424  90D8               	bcf	status,0,c
  1840  001426  3603               	rlcf	___awdiv@divisor^0,f,c
  1841  001428  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1842  00142A  2A05               	incf	___awdiv@counter^0,f,c
  1843  00142C                     l1777:
  1844  00142C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1845  00142E  EF1B  F00A         	goto	u781
  1846  001432  EF1D  F00A         	goto	u780
  1847  001436                     u781:
  1848  001436  EF12  F00A         	goto	l1775
  1849  00143A                     u780:
  1850  00143A                     l1779:
  1851  00143A  90D8               	bcf	status,0,c
  1852  00143C  3607               	rlcf	___awdiv@quotient^0,f,c
  1853  00143E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1854  001440  5003               	movf	___awdiv@divisor^0,w,c
  1855  001442  5C01               	subwf	___awdiv@dividend^0,w,c
  1856  001444  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1857  001446  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1858  001448  A0D8               	btfss	status,0,c
  1859  00144A  EF29  F00A         	goto	u791
  1860  00144E  EF2B  F00A         	goto	u790
  1861  001452                     u791:
  1862  001452  EF30  F00A         	goto	l1787
  1863  001456                     u790:
  1864  001456  5003               	movf	___awdiv@divisor^0,w,c
  1865  001458  5E01               	subwf	___awdiv@dividend^0,f,c
  1866  00145A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1867  00145C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1868  00145E  8007               	bsf	___awdiv@quotient^0,0,c
  1869  001460                     l1787:
  1870  001460  90D8               	bcf	status,0,c
  1871  001462  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1872  001464  3203               	rrcf	___awdiv@divisor^0,f,c
  1873  001466  2E05               	decfsz	___awdiv@counter^0,f,c
  1874  001468  EF1D  F00A         	goto	l1779
  1875  00146C                     l1791:
  1876  00146C  5006               	movf	___awdiv@sign^0,w,c
  1877  00146E  B4D8               	btfsc	status,2,c
  1878  001470  EF3C  F00A         	goto	u801
  1879  001474  EF3E  F00A         	goto	u800
  1880  001478                     u801:
  1881  001478  EF42  F00A         	goto	l1795
  1882  00147C                     u800:
  1883  00147C  6C07               	negf	___awdiv@quotient^0,c
  1884  00147E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1885  001480  B0D8               	btfsc	status,0,c
  1886  001482  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1887  001484                     l1795:
  1888  001484  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1889  001488  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1890  00148C  0012               	return		;funcret
  1891  00148E                     __end_of___awdiv:
  1892                           	opt callstack 0
  1893                           
  1894 ;; *************** function _clear_text *****************
  1895 ;; Defined at:
  1896 ;;		line 288 in file "afficheur.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  add             2    8[COMRAM] unsigned int 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, status,2, status,0, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;Total ram usage:        2 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    3
  1917 ;; This function calls:
  1918 ;;		_d1command
  1919 ;;		_d2command
  1920 ;; This function is called by:
  1921 ;;		_main
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text11
  1926  001878                     __ptext11:
  1927                           	opt callstack 0
  1928  001878                     _clear_text:
  1929                           	opt callstack 27
  1930  001878                     
  1931                           ;afficheur.c: 290:     unsigned int add;;afficheur.c: 292:     d2command(0,0,0x24);
  1932  001878  0E00               	movlw	0
  1933  00187A  6E05               	movwf	d2command@d2^0,c
  1934  00187C  0E24               	movlw	36
  1935  00187E  6E06               	movwf	d2command@cmd^0,c
  1936  001880  0E00               	movlw	0
  1937  001882  EC53  F00B         	call	_d2command
  1938  001886                     
  1939                           ;afficheur.c: 293:     for (add=0;add!=0x8000;add++)
  1940  001886  0E00               	movlw	0
  1941  001888  6E0A               	movwf	(clear_text@add+1)^0,c
  1942  00188A  0E00               	movlw	0
  1943  00188C  6E09               	movwf	clear_text@add^0,c
  1944  00188E                     l1981:
  1945                           
  1946                           ;afficheur.c: 294:     {;afficheur.c: 295:             d1command(0x00,0xC0);
  1947  00188E  0EC0               	movlw	192
  1948  001890  6E05               	movwf	d1command@cmd^0,c
  1949  001892  0E00               	movlw	0
  1950  001894  ECB4  F00B         	call	_d1command
  1951  001898                     
  1952                           ;afficheur.c: 296:     }
  1953  001898  4A09               	infsnz	clear_text@add^0,f,c
  1954  00189A  2A0A               	incf	(clear_text@add+1)^0,f,c
  1955  00189C  0E80               	movlw	128
  1956  00189E  180A               	xorwf	(clear_text@add+1)^0,w,c
  1957  0018A0  1009               	iorwf	clear_text@add^0,w,c
  1958  0018A2  A4D8               	btfss	status,2,c
  1959  0018A4  EF56  F00C         	goto	u931
  1960  0018A8  EF58  F00C         	goto	u930
  1961  0018AC                     u931:
  1962  0018AC  EF47  F00C         	goto	l1981
  1963  0018B0                     u930:
  1964  0018B0  0012               	return		;funcret
  1965  0018B2                     __end_of_clear_text:
  1966                           	opt callstack 0
  1967                           
  1968 ;; *************** function _clear_graphics *****************
  1969 ;; Defined at:
  1970 ;;		line 299 in file "afficheur.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;		None
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  add             2    8[COMRAM] unsigned int 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;Total ram usage:        2 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; Hardware stack levels required when called:    3
  1991 ;; This function calls:
  1992 ;;		_d1command
  1993 ;;		_d2command
  1994 ;; This function is called by:
  1995 ;;		_main
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text12
  2000  0018B2                     __ptext12:
  2001                           	opt callstack 0
  2002  0018B2                     _clear_graphics:
  2003                           	opt callstack 27
  2004  0018B2                     
  2005                           ;afficheur.c: 301:     unsigned int add;;afficheur.c: 303:     d2command(0,0x80,0x24);
  2006  0018B2  0E80               	movlw	128
  2007  0018B4  6E05               	movwf	d2command@d2^0,c
  2008  0018B6  0E24               	movlw	36
  2009  0018B8  6E06               	movwf	d2command@cmd^0,c
  2010  0018BA  0E00               	movlw	0
  2011  0018BC  EC53  F00B         	call	_d2command
  2012  0018C0                     
  2013                           ;afficheur.c: 304:     for (add=0x8000;add!=0xF800;add++)
  2014  0018C0  0E80               	movlw	128
  2015  0018C2  6E0A               	movwf	(clear_graphics@add+1)^0,c
  2016  0018C4  0E00               	movlw	0
  2017  0018C6  6E09               	movwf	clear_graphics@add^0,c
  2018  0018C8                     l1995:
  2019                           
  2020                           ;afficheur.c: 305:     {;afficheur.c: 306:             d1command(0x00,0xC0);
  2021  0018C8  0EC0               	movlw	192
  2022  0018CA  6E05               	movwf	d1command@cmd^0,c
  2023  0018CC  0E00               	movlw	0
  2024  0018CE  ECB4  F00B         	call	_d1command
  2025  0018D2                     
  2026                           ;afficheur.c: 307:     }
  2027  0018D2  4A09               	infsnz	clear_graphics@add^0,f,c
  2028  0018D4  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  2029  0018D6  0EF8               	movlw	248
  2030  0018D8  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  2031  0018DA  1009               	iorwf	clear_graphics@add^0,w,c
  2032  0018DC  A4D8               	btfss	status,2,c
  2033  0018DE  EF73  F00C         	goto	u941
  2034  0018E2  EF75  F00C         	goto	u940
  2035  0018E6                     u941:
  2036  0018E6  EF64  F00C         	goto	l1995
  2037  0018EA                     u940:
  2038  0018EA  0012               	return		;funcret
  2039  0018EC                     __end_of_clear_graphics:
  2040                           	opt callstack 0
  2041                           
  2042 ;; *************** function _d2command *****************
  2043 ;; Defined at:
  2044 ;;		line 129 in file "afficheur.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  d1              1    wreg     unsigned char 
  2047 ;;  d2              1    4[COMRAM] unsigned char 
  2048 ;;  cmd             1    5[COMRAM] unsigned char 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  d1              1    6[COMRAM] unsigned char 
  2051 ;;  res             1    7[COMRAM] unsigned char 
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      unsigned char 
  2054 ;; Registers used:
  2055 ;;		wreg, status,2, status,0, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2061 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2062 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;Total ram usage:        4 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; Hardware stack levels required when called:    2
  2068 ;; This function calls:
  2069 ;;		_delai_us_char
  2070 ;;		_wait_status_ok
  2071 ;;		_write_c_aff
  2072 ;;		_write_d_aff
  2073 ;; This function is called by:
  2074 ;;		_initialisation_afficheur
  2075 ;;		_goto_lico
  2076 ;;		_clear_text
  2077 ;;		_clear_graphics
  2078 ;;		_plot1
  2079 ;;		_clear_cgram
  2080 ;;		_plot0
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text13
  2085  0016A6                     __ptext13:
  2086                           	opt callstack 0
  2087  0016A6                     _d2command:
  2088                           	opt callstack 27
  2089                           
  2090                           ;incstack = 0
  2091                           ;d2command@d1 stored from wreg
  2092  0016A6  6E07               	movwf	d2command@d1^0,c
  2093  0016A8                     
  2094                           ;afficheur.c: 129: unsigned char d2command(unsigned char d1, unsigned char d2, unsigned 
      +                          char cmd);afficheur.c: 130: {;afficheur.c: 131:     unsigned char res;;afficheur.c: 133:
      +                               res=0;
  2095  0016A8  0E00               	movlw	0
  2096  0016AA  6E08               	movwf	d2command@res^0,c
  2097  0016AC                     
  2098                           ;afficheur.c: 135:     if (wait_status_ok()==1)
  2099  0016AC  EC18  F00B         	call	_wait_status_ok	;wreg free
  2100  0016B0  06E8               	decf	wreg,f,c
  2101  0016B2  A4D8               	btfss	status,2,c
  2102  0016B4  EF5E  F00B         	goto	u691
  2103  0016B8  EF60  F00B         	goto	u690
  2104  0016BC                     u691:
  2105  0016BC  EF88  F00B         	goto	l1713
  2106  0016C0                     u690:
  2107  0016C0                     
  2108                           ;afficheur.c: 136:     {;afficheur.c: 137:         delai_us_char(12);
  2109  0016C0  0E0C               	movlw	12
  2110  0016C2  ECA7  F00C         	call	_delai_us_char
  2111  0016C6                     
  2112                           ;afficheur.c: 138:         write_d_aff(d1);
  2113  0016C6  5007               	movf	d2command@d1^0,w,c
  2114  0016C8  EC13  F00D         	call	_write_d_aff
  2115  0016CC                     
  2116                           ;afficheur.c: 139:         if (wait_status_ok()==1)
  2117  0016CC  EC18  F00B         	call	_wait_status_ok	;wreg free
  2118  0016D0  06E8               	decf	wreg,f,c
  2119  0016D2  A4D8               	btfss	status,2,c
  2120  0016D4  EF6E  F00B         	goto	u701
  2121  0016D8  EF70  F00B         	goto	u700
  2122  0016DC                     u701:
  2123  0016DC  EF88  F00B         	goto	l1713
  2124  0016E0                     u700:
  2125  0016E0                     
  2126                           ;afficheur.c: 140:         {;afficheur.c: 141:             delai_us_char(12);
  2127  0016E0  0E0C               	movlw	12
  2128  0016E2  ECA7  F00C         	call	_delai_us_char
  2129  0016E6                     
  2130                           ;afficheur.c: 142:             write_d_aff(d2);
  2131  0016E6  5005               	movf	d2command@d2^0,w,c
  2132  0016E8  EC13  F00D         	call	_write_d_aff
  2133  0016EC                     
  2134                           ;afficheur.c: 143:             if (wait_status_ok()==1)
  2135  0016EC  EC18  F00B         	call	_wait_status_ok	;wreg free
  2136  0016F0  06E8               	decf	wreg,f,c
  2137  0016F2  A4D8               	btfss	status,2,c
  2138  0016F4  EF7E  F00B         	goto	u711
  2139  0016F8  EF80  F00B         	goto	u710
  2140  0016FC                     u711:
  2141  0016FC  EF88  F00B         	goto	l1713
  2142  001700                     u710:
  2143  001700                     
  2144                           ;afficheur.c: 144:             {;afficheur.c: 145:                 delai_us_char(12);
  2145  001700  0E0C               	movlw	12
  2146  001702  ECA7  F00C         	call	_delai_us_char
  2147  001706                     
  2148                           ;afficheur.c: 146:                 write_c_aff(cmd);
  2149  001706  5006               	movf	d2command@cmd^0,w,c
  2150  001708  EC20  F00D         	call	_write_c_aff
  2151  00170C                     
  2152                           ;afficheur.c: 148:                     res=1;
  2153  00170C  0E01               	movlw	1
  2154  00170E  6E08               	movwf	d2command@res^0,c
  2155  001710                     l1713:
  2156                           
  2157                           ;afficheur.c: 152:     return res;
  2158  001710  5008               	movf	d2command@res^0,w,c
  2159  001712  0012               	return		;funcret
  2160  001714                     __end_of_d2command:
  2161                           	opt callstack 0
  2162                           
  2163 ;; *************** function _d1command *****************
  2164 ;; Defined at:
  2165 ;;		line 107 in file "afficheur.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  d1              1    wreg     unsigned char 
  2168 ;;  cmd             1    4[COMRAM] unsigned char 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  d1              1    5[COMRAM] unsigned char 
  2171 ;;  res             1    6[COMRAM] unsigned char 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      unsigned char 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, status,0, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2181 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;Total ram usage:        3 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    2
  2188 ;; This function calls:
  2189 ;;		_delai_us_char
  2190 ;;		_wait_status_ok
  2191 ;;		_write_c_aff
  2192 ;;		_write_d_aff
  2193 ;; This function is called by:
  2194 ;;		_initialisation_afficheur
  2195 ;;		_draw_string
  2196 ;;		_clear_text
  2197 ;;		_clear_graphics
  2198 ;;		_draw_char
  2199 ;;		_draw_hex8
  2200 ;;		_clear_cgram
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text14
  2205  001768                     __ptext14:
  2206                           	opt callstack 0
  2207  001768                     _d1command:
  2208                           	opt callstack 27
  2209                           
  2210                           ;incstack = 0
  2211                           ;d1command@d1 stored from wreg
  2212  001768  6E06               	movwf	d1command@d1^0,c
  2213  00176A                     
  2214                           ;afficheur.c: 107: unsigned char d1command(unsigned char d1, unsigned char cmd);afficheu
      +                          r.c: 108: {;afficheur.c: 109:     unsigned char res;;afficheur.c: 111:     res=0;
  2215  00176A  0E00               	movlw	0
  2216  00176C  6E07               	movwf	d1command@res^0,c
  2217  00176E                     
  2218                           ;afficheur.c: 113:     if (wait_status_ok()==1)
  2219  00176E  EC18  F00B         	call	_wait_status_ok	;wreg free
  2220  001772  06E8               	decf	wreg,f,c
  2221  001774  A4D8               	btfss	status,2,c
  2222  001776  EFBF  F00B         	goto	u881
  2223  00177A  EFC1  F00B         	goto	u880
  2224  00177E                     u881:
  2225  00177E  EFD9  F00B         	goto	l1861
  2226  001782                     u880:
  2227  001782                     
  2228                           ;afficheur.c: 114:     {;afficheur.c: 115:         delai_us_char(12);
  2229  001782  0E0C               	movlw	12
  2230  001784  ECA7  F00C         	call	_delai_us_char
  2231  001788                     
  2232                           ;afficheur.c: 116:         write_d_aff(d1);
  2233  001788  5006               	movf	d1command@d1^0,w,c
  2234  00178A  EC13  F00D         	call	_write_d_aff
  2235  00178E                     
  2236                           ;afficheur.c: 117:         if (wait_status_ok()==1)
  2237  00178E  EC18  F00B         	call	_wait_status_ok	;wreg free
  2238  001792  06E8               	decf	wreg,f,c
  2239  001794  A4D8               	btfss	status,2,c
  2240  001796  EFCF  F00B         	goto	u891
  2241  00179A  EFD1  F00B         	goto	u890
  2242  00179E                     u891:
  2243  00179E  EFD9  F00B         	goto	l1861
  2244  0017A2                     u890:
  2245  0017A2                     
  2246                           ;afficheur.c: 118:         {;afficheur.c: 119:             delai_us_char(12);
  2247  0017A2  0E0C               	movlw	12
  2248  0017A4  ECA7  F00C         	call	_delai_us_char
  2249  0017A8                     
  2250                           ;afficheur.c: 120:             write_c_aff(cmd);
  2251  0017A8  5005               	movf	d1command@cmd^0,w,c
  2252  0017AA  EC20  F00D         	call	_write_c_aff
  2253  0017AE                     
  2254                           ;afficheur.c: 122:                 res=1;
  2255  0017AE  0E01               	movlw	1
  2256  0017B0  6E07               	movwf	d1command@res^0,c
  2257  0017B2                     l1861:
  2258                           
  2259                           ;afficheur.c: 126:     return res;
  2260  0017B2  5007               	movf	d1command@res^0,w,c
  2261  0017B4  0012               	return		;funcret
  2262  0017B6                     __end_of_d1command:
  2263                           	opt callstack 0
  2264                           
  2265 ;; *************** function _write_d_aff *****************
  2266 ;; Defined at:
  2267 ;;		line 5 in file "afficheur.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;  data            1    wreg     unsigned char 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  data            1    0[COMRAM] unsigned char 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  1    wreg      void 
  2274 ;; Registers used:
  2275 ;;		wreg, status,2
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2284 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2285 ;;Total ram usage:        1 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; This function calls:
  2288 ;;		Nothing
  2289 ;; This function is called by:
  2290 ;;		_d1command
  2291 ;;		_d2command
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text15
  2296  001A26                     __ptext15:
  2297                           	opt callstack 0
  2298  001A26                     _write_d_aff:
  2299                           	opt callstack 28
  2300                           
  2301                           ;incstack = 0
  2302                           ;write_d_aff@data stored from wreg
  2303  001A26  6E01               	movwf	write_d_aff@data^0,c
  2304  001A28                     
  2305                           ;afficheur.c: 5: void write_d_aff(unsigned char data);afficheur.c: 6: {;afficheur.c: 7: 
      +                              LATH=data;
  2306  001A28  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  2307  001A2C                     
  2308                           ;afficheur.c: 8:     TRISH=0x00;
  2309  001A2C  0E00               	movlw	0
  2310  001A2E  6E99               	movwf	153,c	;volatile
  2311  001A30                     
  2312                           ;afficheur.c: 9:     LATJbits.LATJ0=0;
  2313  001A30  9091               	bcf	145,0,c	;volatile
  2314  001A32                     
  2315                           ;afficheur.c: 10:     LATJbits.LATJ3=0;
  2316  001A32  9691               	bcf	145,3,c	;volatile
  2317  001A34                     
  2318                           ;afficheur.c: 11:     LATJbits.LATJ2=0;
  2319  001A34  9491               	bcf	145,2,c	;volatile
  2320  001A36                     
  2321                           ;afficheur.c: 12:     __nop();
  2322  001A36  F000               	nop	
  2323  001A38                     
  2324                           ;afficheur.c: 13:     __nop();
  2325  001A38  F000               	nop	
  2326  001A3A                     
  2327                           ;afficheur.c: 14:     LATJbits.LATJ2=1;
  2328  001A3A  8491               	bsf	145,2,c	;volatile
  2329  001A3C                     
  2330                           ;afficheur.c: 15:     LATJbits.LATJ3=1;
  2331  001A3C  8691               	bsf	145,3,c	;volatile
  2332  001A3E  0012               	return		;funcret
  2333  001A40                     __end_of_write_d_aff:
  2334                           	opt callstack 0
  2335                           
  2336 ;; *************** function _write_c_aff *****************
  2337 ;; Defined at:
  2338 ;;		line 18 in file "afficheur.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  command         1    wreg     unsigned char 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  command         1    0[COMRAM] unsigned char 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      void 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;Total ram usage:        1 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_command
  2362 ;;		_d1command
  2363 ;;		_d2command
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text16
  2368  001A40                     __ptext16:
  2369                           	opt callstack 0
  2370  001A40                     _write_c_aff:
  2371                           	opt callstack 28
  2372                           
  2373                           ;incstack = 0
  2374                           ;write_c_aff@command stored from wreg
  2375  001A40  6E01               	movwf	write_c_aff@command^0,c
  2376  001A42                     
  2377                           ;afficheur.c: 18: void write_c_aff(unsigned char command);afficheur.c: 19: {;afficheur.c
      +                          : 20:     LATH=command;
  2378  001A42  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  2379  001A46                     
  2380                           ;afficheur.c: 21:     TRISH=0x00;
  2381  001A46  0E00               	movlw	0
  2382  001A48  6E99               	movwf	153,c	;volatile
  2383  001A4A                     
  2384                           ;afficheur.c: 22:     LATJbits.LATJ0=1;
  2385  001A4A  8091               	bsf	145,0,c	;volatile
  2386  001A4C                     
  2387                           ;afficheur.c: 23:     LATJbits.LATJ3=0;
  2388  001A4C  9691               	bcf	145,3,c	;volatile
  2389  001A4E                     
  2390                           ;afficheur.c: 24:     LATJbits.LATJ2=0;
  2391  001A4E  9491               	bcf	145,2,c	;volatile
  2392  001A50                     
  2393                           ;afficheur.c: 25:     __nop();
  2394  001A50  F000               	nop	
  2395  001A52                     
  2396                           ;afficheur.c: 26:     __nop();
  2397  001A52  F000               	nop	
  2398  001A54                     
  2399                           ;afficheur.c: 27:     LATJbits.LATJ2=1;
  2400  001A54  8491               	bsf	145,2,c	;volatile
  2401  001A56                     
  2402                           ;afficheur.c: 28:     LATJbits.LATJ3=1;
  2403  001A56  8691               	bsf	145,3,c	;volatile
  2404  001A58  0012               	return		;funcret
  2405  001A5A                     __end_of_write_c_aff:
  2406                           	opt callstack 0
  2407                           
  2408 ;; *************** function _wait_status_ok *****************
  2409 ;; Defined at:
  2410 ;;		line 54 in file "afficheur.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  res             1    3[COMRAM] unsigned char 
  2415 ;;  status          1    2[COMRAM] unsigned char 
  2416 ;;  err             1    1[COMRAM] unsigned char 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      unsigned char 
  2419 ;; Registers used:
  2420 ;;		wreg, status,2, status,0, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;Total ram usage:        3 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:    1
  2433 ;; This function calls:
  2434 ;;		_delai_us_char
  2435 ;; This function is called by:
  2436 ;;		_command
  2437 ;;		_d1command
  2438 ;;		_d2command
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text17
  2443  001630                     __ptext17:
  2444                           	opt callstack 0
  2445  001630                     _wait_status_ok:
  2446                           	opt callstack 27
  2447  001630                     
  2448                           ;afficheur.c: 56:     unsigned char err,res,status;;afficheur.c: 58:     err=0;
  2449  001630  0E00               	movlw	0
  2450  001632  6E02               	movwf	wait_status_ok@err^0,c
  2451                           
  2452                           ;afficheur.c: 59:     res=2;
  2453  001634  0E02               	movlw	2
  2454  001636  6E04               	movwf	wait_status_ok@res^0,c
  2455                           
  2456                           ;afficheur.c: 60:     while (res==2)
  2457  001638  EF48  F00B         	goto	l1671
  2458  00163C                     l100:
  2459                           
  2460                           ;afficheur.c: 61:     {;afficheur.c: 62:         TRISH=0xFF;
  2461  00163C  6899               	setf	153,c	;volatile
  2462                           
  2463                           ;afficheur.c: 63:         LATJbits.LATJ0=1;
  2464  00163E  8091               	bsf	145,0,c	;volatile
  2465                           
  2466                           ;afficheur.c: 64:         LATJbits.LATJ3=0;
  2467  001640  9691               	bcf	145,3,c	;volatile
  2468                           
  2469                           ;afficheur.c: 65:         LATJbits.LATJ1=0;
  2470  001642  9291               	bcf	145,1,c	;volatile
  2471                           
  2472                           ;afficheur.c: 66:         __nop();
  2473  001644  F000               	nop	
  2474                           
  2475                           ;afficheur.c: 67:         status=PORTH;
  2476  001646  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  2477                           
  2478                           ;afficheur.c: 68:         LATJbits.LATJ1=1;
  2479  00164A  8291               	bsf	145,1,c	;volatile
  2480                           
  2481                           ;afficheur.c: 69:         LATJbits.LATJ3=1;
  2482  00164C  8691               	bsf	145,3,c	;volatile
  2483  00164E                     
  2484                           ;afficheur.c: 71:         status=(status&0x03);
  2485  00164E  5003               	movf	wait_status_ok@status^0,w,c
  2486  001650  0B03               	andlw	3
  2487  001652  6E03               	movwf	wait_status_ok@status^0,c
  2488                           
  2489                           ;afficheur.c: 72:         if (status!=0x03)
  2490  001654  0E03               	movlw	3
  2491  001656  1803               	xorwf	wait_status_ok@status^0,w,c
  2492  001658  B4D8               	btfsc	status,2,c
  2493  00165A  EF31  F00B         	goto	u641
  2494  00165E  EF33  F00B         	goto	u640
  2495  001662                     u641:
  2496  001662  EF46  F00B         	goto	l1669
  2497  001666                     u640:
  2498  001666                     
  2499                           ;afficheur.c: 73:         {;afficheur.c: 74:             err++;
  2500  001666  2A02               	incf	wait_status_ok@err^0,f,c
  2501  001668                     
  2502                           ;afficheur.c: 75:             delai_us_char(12);
  2503  001668  0E0C               	movlw	12
  2504  00166A  ECA7  F00C         	call	_delai_us_char
  2505  00166E                     
  2506                           ;afficheur.c: 76:             if (err>=250)
  2507  00166E  0EF9               	movlw	249
  2508  001670  6402               	cpfsgt	wait_status_ok@err^0,c
  2509  001672  EF3D  F00B         	goto	u651
  2510  001676  EF3F  F00B         	goto	u650
  2511  00167A                     u651:
  2512  00167A  EF48  F00B         	goto	l1671
  2513  00167E                     u650:
  2514  00167E                     
  2515                           ;afficheur.c: 77:             {;afficheur.c: 79:                 LATCbits.LATC2=0;LATCbi
      +                          ts.LATC1=1;LATGbits.LATG0=1;
  2516  00167E  948B               	bcf	139,2,c	;volatile
  2517  001680  828B               	bsf	139,1,c	;volatile
  2518  001682  808F               	bsf	143,0,c	;volatile
  2519  001684                     
  2520                           ;afficheur.c: 80:                 res=0;
  2521  001684  0E00               	movlw	0
  2522  001686  6E04               	movwf	wait_status_ok@res^0,c
  2523  001688  EF48  F00B         	goto	l1671
  2524  00168C                     l1669:
  2525                           
  2526                           ;afficheur.c: 84:         {;afficheur.c: 85:             res=1;
  2527  00168C  0E01               	movlw	1
  2528  00168E  6E04               	movwf	wait_status_ok@res^0,c
  2529  001690                     l1671:
  2530                           
  2531                           ;afficheur.c: 60:     while (res==2)
  2532  001690  0E02               	movlw	2
  2533  001692  1804               	xorwf	wait_status_ok@res^0,w,c
  2534  001694  B4D8               	btfsc	status,2,c
  2535  001696  EF4F  F00B         	goto	u661
  2536  00169A  EF51  F00B         	goto	u660
  2537  00169E                     u661:
  2538  00169E  EF1E  F00B         	goto	l100
  2539  0016A2                     u660:
  2540  0016A2                     
  2541                           ;afficheur.c: 88:     return res;
  2542  0016A2  5004               	movf	wait_status_ok@res^0,w,c
  2543  0016A4  0012               	return		;funcret
  2544  0016A6                     __end_of_wait_status_ok:
  2545                           	opt callstack 0
  2546                           
  2547 ;; *************** function _delai_us_char *****************
  2548 ;; Defined at:
  2549 ;;		line 155 in file "afficheur.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  ucdelai         1    wreg     unsigned char 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  ucdelai         1    0[COMRAM] unsigned char 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;Total ram usage:        1 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_wait_status_ok
  2573 ;;		_command
  2574 ;;		_d1command
  2575 ;;		_d2command
  2576 ;;		_initialisation_afficheur
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text18
  2581  00194E                     __ptext18:
  2582                           	opt callstack 0
  2583  00194E                     _delai_us_char:
  2584                           	opt callstack 29
  2585                           
  2586                           ;incstack = 0
  2587                           ;delai_us_char@ucdelai stored from wreg
  2588  00194E  6E01               	movwf	delai_us_char@ucdelai^0,c
  2589  001950                     
  2590                           ;afficheur.c: 155: void delai_us_char(unsigned char ucdelai);afficheur.c: 156: {;affiche
      +                          ur.c: 158:     while (ucdelai>0)
  2591  001950  EFB5  F00C         	goto	l1617
  2592  001954                     l124:
  2593                           
  2594                           ;afficheur.c: 159:     {;afficheur.c: 160:         __nop();__nop();__nop();__nop();__nop
      +                          ();__nop();__nop();__nop();__nop();__nop();
  2595  001954  F000               	nop	
  2596  001956  F000               	nop	
  2597  001958  F000               	nop	
  2598  00195A  F000               	nop	
  2599  00195C  F000               	nop	
  2600  00195E  F000               	nop	
  2601  001960  F000               	nop	
  2602  001962  F000               	nop	
  2603  001964  F000               	nop	
  2604  001966  F000               	nop	
  2605  001968                     
  2606                           ;afficheur.c: 161:         ucdelai--;
  2607  001968  0601               	decf	delai_us_char@ucdelai^0,f,c
  2608  00196A                     l1617:
  2609                           
  2610                           ;afficheur.c: 158:     while (ucdelai>0)
  2611  00196A  5001               	movf	delai_us_char@ucdelai^0,w,c
  2612  00196C  A4D8               	btfss	status,2,c
  2613  00196E  EFBB  F00C         	goto	u631
  2614  001972  EFBD  F00C         	goto	u630
  2615  001976                     u631:
  2616  001976  EFAA  F00C         	goto	l124
  2617  00197A                     u630:
  2618  00197A  0012               	return		;funcret
  2619  00197C                     __end_of_delai_us_char:
  2620                           	opt callstack 0
  2621                           
  2622 ;; *************** function _SPI_Initialize *****************
  2623 ;; Defined at:
  2624 ;;		line 3 in file "spi.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;		None
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;		None
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg, status,2
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2642 ;;Total ram usage:        0 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		_main
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text19
  2652  001A74                     __ptext19:
  2653                           	opt callstack 0
  2654  001A74                     _SPI_Initialize:
  2655                           	opt callstack 30
  2656  001A74                     
  2657                           ;spi.c: 6:     SSP2STAT = 0x00;
  2658  001A74  0E00               	movlw	0
  2659  001A76  6E68               	movwf	104,c	;volatile
  2660                           
  2661                           ;spi.c: 7:     SSP2CON1 = 0x31;
  2662  001A78  0E31               	movlw	49
  2663  001A7A  6E67               	movwf	103,c	;volatile
  2664  001A7C                     
  2665                           ;spi.c: 11:     TRISDbits.TRISD4 = 0;
  2666  001A7C  9895               	bcf	149,4,c	;volatile
  2667  001A7E                     
  2668                           ;spi.c: 13:     TRISDbits.TRISD6 = 0;
  2669  001A7E  9C95               	bcf	149,6,c	;volatile
  2670  001A80                     
  2671                           ;spi.c: 15:     TRISFbits.TRISF7 = 0;
  2672  001A80  9E97               	bcf	151,7,c	;volatile
  2673  001A82                     
  2674                           ;spi.c: 16:     LATFbits.LATF7 = 1;
  2675  001A82  8E8E               	bsf	142,7,c	;volatile
  2676  001A84                     
  2677                           ;spi.c: 17:     PIR2bits.SSP2IF = 0;
  2678  001A84  9AA1               	bcf	161,5,c	;volatile
  2679  001A86                     
  2680                           ;spi.c: 19:     SSP2CON1bits.SSPEN = 1;
  2681  001A86  8A67               	bsf	103,5,c	;volatile
  2682  001A88  0012               	return		;funcret
  2683  001A8A                     __end_of_SPI_Initialize:
  2684                           	opt callstack 0
  2685                           
  2686 ;; *************** function _EEP_SPI_WriteBytes *****************
  2687 ;; Defined at:
  2688 ;;		line 66 in file "eep_spi.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  Fu8Address      1    wreg     unsigned char 
  2691 ;;  Fpu8Data        2   11[COMRAM] PTR unsigned char 
  2692 ;;		 -> main@tu8Data(16), 
  2693 ;;  Fu8Size         1   13[COMRAM] unsigned char 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  Fu8Address      1   14[COMRAM] unsigned char 
  2696 ;;  u8Index         1   15[COMRAM] unsigned char 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      void 
  2699 ;; Registers used:
  2700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2706 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;Total ram usage:        5 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    3
  2713 ;; This function calls:
  2714 ;;		_EEP_SPI_WriteByte
  2715 ;; This function is called by:
  2716 ;;		_main
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text20
  2721  001802                     __ptext20:
  2722                           	opt callstack 0
  2723  001802                     _EEP_SPI_WriteBytes:
  2724                           	opt callstack 27
  2725                           
  2726                           ;incstack = 0
  2727                           ;EEP_SPI_WriteBytes@Fu8Address stored from wreg
  2728  001802  6E0F               	movwf	EEP_SPI_WriteBytes@Fu8Address^0,c
  2729  001804                     
  2730                           ;eep_spi.c: 66: void EEP_SPI_WriteBytes(uint8_t Fu8Address, uint8_t *Fpu8Data, uint8_t F
      +                          u8Size);eep_spi.c: 67: {;eep_spi.c: 68:     uint8_t u8Index = 0x00;
  2731  001804  0E00               	movlw	0
  2732  001806  6E10               	movwf	EEP_SPI_WriteBytes@u8Index^0,c
  2733                           
  2734                           ;eep_spi.c: 70:     for(u8Index=0x00; u8Index<Fu8Size; u8Index++)
  2735  001808  0E00               	movlw	0
  2736  00180A  6E10               	movwf	EEP_SPI_WriteBytes@u8Index^0,c
  2737  00180C  EF15  F00C         	goto	l2049
  2738  001810                     l2045:
  2739                           
  2740                           ;eep_spi.c: 71:     {;eep_spi.c: 72:         EEP_SPI_WriteByte((Fu8Address+u8Index), *(F
      +                          pu8Data+u8Index));
  2741  001810  5010               	movf	EEP_SPI_WriteBytes@u8Index^0,w,c
  2742  001812  240C               	addwf	EEP_SPI_WriteBytes@Fpu8Data^0,w,c
  2743  001814  6ED9               	movwf	fsr2l,c
  2744  001816  0E00               	movlw	0
  2745  001818  200D               	addwfc	(EEP_SPI_WriteBytes@Fpu8Data+1)^0,w,c
  2746  00181A  6EDA               	movwf	fsr2h,c
  2747  00181C  50DF               	movf	indf2,w,c
  2748  00181E  6E07               	movwf	EEP_SPI_WriteByte@Fu8Data^0,c
  2749  001820  500F               	movf	EEP_SPI_WriteBytes@Fu8Address^0,w,c
  2750  001822  2410               	addwf	EEP_SPI_WriteBytes@u8Index^0,w,c
  2751  001824  ECDB  F00B         	call	_EEP_SPI_WriteByte
  2752  001828                     
  2753                           ;eep_spi.c: 73:     }
  2754  001828  2A10               	incf	EEP_SPI_WriteBytes@u8Index^0,f,c
  2755  00182A                     l2049:
  2756  00182A  500E               	movf	EEP_SPI_WriteBytes@Fu8Size^0,w,c
  2757  00182C  5C10               	subwf	EEP_SPI_WriteBytes@u8Index^0,w,c
  2758  00182E  A0D8               	btfss	status,0,c
  2759  001830  EF1C  F00C         	goto	u1041
  2760  001834  EF1E  F00C         	goto	u1040
  2761  001838                     u1041:
  2762  001838  EF08  F00C         	goto	l2045
  2763  00183C                     u1040:
  2764  00183C  0012               	return		;funcret
  2765  00183E                     __end_of_EEP_SPI_WriteBytes:
  2766                           	opt callstack 0
  2767                           
  2768 ;; *************** function _EEP_SPI_WriteByte *****************
  2769 ;; Defined at:
  2770 ;;		line 50 in file "eep_spi.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  Fu8Address      1    wreg     unsigned char 
  2773 ;;  Fu8Data         1    6[COMRAM] unsigned char 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  Fu8Address      1    7[COMRAM] unsigned char 
  2776 ;;  tu8Data         3    8[COMRAM] unsigned char [3]
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2786 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;Total ram usage:        5 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    2
  2793 ;; This function calls:
  2794 ;;		_EEP_SPI_EnableWrite
  2795 ;;		_EEP_SPI_IsWriteInProgress
  2796 ;;		_SPI_ExchangeBlock
  2797 ;; This function is called by:
  2798 ;;		_EEP_SPI_WriteBytes
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text21
  2803  0017B6                     __ptext21:
  2804                           	opt callstack 0
  2805  0017B6                     _EEP_SPI_WriteByte:
  2806                           	opt callstack 27
  2807                           
  2808                           ;incstack = 0
  2809                           ;EEP_SPI_WriteByte@Fu8Address stored from wreg
  2810  0017B6  6E08               	movwf	EEP_SPI_WriteByte@Fu8Address^0,c
  2811  0017B8                     
  2812                           ;eep_spi.c: 50: void EEP_SPI_WriteByte(uint8_t Fu8Address, uint8_t Fu8Data);eep_spi.c: 5
      +                          1: {;eep_spi.c: 52:     uint8_t tu8Data[3] = {0x02, Fu8Address, Fu8Data};
  2813  0017B8  0E00               	movlw	0
  2814  0017BA  6E09               	movwf	EEP_SPI_WriteByte@tu8Data^0,c
  2815  0017BC  0E00               	movlw	0
  2816  0017BE  6E0A               	movwf	(EEP_SPI_WriteByte@tu8Data+1)^0,c
  2817  0017C0  0E00               	movlw	0
  2818  0017C2  6E0B               	movwf	(EEP_SPI_WriteByte@tu8Data+2)^0,c
  2819  0017C4  0E02               	movlw	2
  2820  0017C6  6E09               	movwf	EEP_SPI_WriteByte@tu8Data^0,c
  2821  0017C8  C008  F00A         	movff	EEP_SPI_WriteByte@Fu8Address,EEP_SPI_WriteByte@tu8Data+1
  2822  0017CC  C007  F00B         	movff	EEP_SPI_WriteByte@Fu8Data,EEP_SPI_WriteByte@tu8Data+2
  2823  0017D0                     l1895:
  2824  0017D0  ECBE  F00C         	call	_EEP_SPI_IsWriteInProgress	;wreg free
  2825  0017D4  0900               	iorlw	0
  2826  0017D6  A4D8               	btfss	status,2,c
  2827  0017D8  EFF0  F00B         	goto	u901
  2828  0017DC  EFF2  F00B         	goto	u900
  2829  0017E0                     u901:
  2830  0017E0  EFE8  F00B         	goto	l1895
  2831  0017E4                     u900:
  2832  0017E4                     
  2833                           ;eep_spi.c: 58:     EEP_SPI_EnableWrite();
  2834  0017E4  EC4D  F00D         	call	_EEP_SPI_EnableWrite	;wreg free
  2835  0017E8                     
  2836                           ;eep_spi.c: 61:     LATFbits.LATF7 = 0;
  2837  0017E8  9E8E               	bcf	142,7,c	;volatile
  2838  0017EA                     
  2839                           ;eep_spi.c: 62:     SPI_ExchangeBlock(&tu8Data, 3);
  2840  0017EA  0E09               	movlw	low EEP_SPI_WriteByte@tu8Data
  2841  0017EC  6E01               	movwf	SPI_ExchangeBlock@block^0,c
  2842  0017EE  0E00               	movlw	high EEP_SPI_WriteByte@tu8Data
  2843  0017F0  6E02               	movwf	(SPI_ExchangeBlock@block+1)^0,c
  2844  0017F2  0E00               	movlw	0
  2845  0017F4  6E04               	movwf	(SPI_ExchangeBlock@blockSize+1)^0,c
  2846  0017F6  0E03               	movlw	3
  2847  0017F8  6E03               	movwf	SPI_ExchangeBlock@blockSize^0,c
  2848  0017FA  EC8A  F00B         	call	_SPI_ExchangeBlock	;wreg free
  2849  0017FE                     
  2850                           ;eep_spi.c: 63:     LATFbits.LATF7 = 1;
  2851  0017FE  8E8E               	bsf	142,7,c	;volatile
  2852  001800  0012               	return		;funcret
  2853  001802                     __end_of_EEP_SPI_WriteByte:
  2854                           	opt callstack 0
  2855                           
  2856 ;; *************** function _SPI_ExchangeBlock *****************
  2857 ;; Defined at:
  2858 ;;		line 30 in file "spi.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  block           2    0[COMRAM] PTR void 
  2861 ;;		 -> EEP_SPI_WriteByte@tu8Data(3), 
  2862 ;;  blockSize       2    2[COMRAM] unsigned int 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  data            2    4[COMRAM] PTR unsigned char 
  2865 ;;		 -> EEP_SPI_WriteByte@tu8Data(3), 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2875 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;Total ram usage:        6 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_EEP_SPI_WriteByte
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text22
  2889  001714                     __ptext22:
  2890                           	opt callstack 0
  2891  001714                     _SPI_ExchangeBlock:
  2892                           	opt callstack 28
  2893  001714                     
  2894                           ;spi.c: 30: void SPI_ExchangeBlock(void *block, size_t blockSize);spi.c: 31: {;spi.c: 32
      +                          :     uint8_t *data = block;
  2895  001714  C001  F005         	movff	SPI_ExchangeBlock@block,SPI_ExchangeBlock@data
  2896  001718  C002  F006         	movff	SPI_ExchangeBlock@block+1,SPI_ExchangeBlock@data+1
  2897                           
  2898                           ;spi.c: 33:     while(blockSize--)
  2899  00171C  EFA6  F00B         	goto	l1725
  2900  001720                     l1719:
  2901                           
  2902                           ;spi.c: 34:     {;spi.c: 35:         SSP2BUF = *data;
  2903  001720  C005  FFD9         	movff	SPI_ExchangeBlock@data,fsr2l
  2904  001724  C006  FFDA         	movff	SPI_ExchangeBlock@data+1,fsr2h
  2905  001728  50DF               	movf	indf2,w,c
  2906  00172A  6E6A               	movwf	106,c	;volatile
  2907  00172C                     l246:
  2908  00172C  AAA1               	btfss	161,5,c	;volatile
  2909  00172E  EF9B  F00B         	goto	u721
  2910  001732  EF9D  F00B         	goto	u720
  2911  001736                     u721:
  2912  001736  EF96  F00B         	goto	l246
  2913  00173A                     u720:
  2914  00173A                     
  2915                           ;spi.c: 37:         PIR2bits.SSP2IF = 0;
  2916  00173A  9AA1               	bcf	161,5,c	;volatile
  2917  00173C                     
  2918                           ;spi.c: 38:         *data++ = SSP2BUF;
  2919  00173C  C005  FFD9         	movff	SPI_ExchangeBlock@data,fsr2l
  2920  001740  C006  FFDA         	movff	SPI_ExchangeBlock@data+1,fsr2h
  2921  001744  CF6A FFDF          	movff	3946,indf2	;volatile
  2922  001748  4A05               	infsnz	SPI_ExchangeBlock@data^0,f,c
  2923  00174A  2A06               	incf	(SPI_ExchangeBlock@data+1)^0,f,c
  2924  00174C                     l1725:
  2925                           
  2926                           ;spi.c: 33:     while(blockSize--)
  2927  00174C  0603               	decf	SPI_ExchangeBlock@blockSize^0,f,c
  2928  00174E  A0D8               	btfss	status,0,c
  2929  001750  0604               	decf	(SPI_ExchangeBlock@blockSize+1)^0,f,c
  2930  001752  2803               	incf	SPI_ExchangeBlock@blockSize^0,w,c
  2931  001754  E106               	bnz	u731
  2932  001756  2804               	incf	(SPI_ExchangeBlock@blockSize+1)^0,w,c
  2933  001758  A4D8               	btfss	status,2,c
  2934  00175A  EFB1  F00B         	goto	u731
  2935  00175E  EFB3  F00B         	goto	u730
  2936  001762                     u731:
  2937  001762  EF90  F00B         	goto	l1719
  2938  001766                     u730:
  2939  001766  0012               	return		;funcret
  2940  001768                     __end_of_SPI_ExchangeBlock:
  2941                           	opt callstack 0
  2942                           
  2943 ;; *************** function _EEP_SPI_EnableWrite *****************
  2944 ;; Defined at:
  2945 ;;		line 7 in file "eep_spi.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;		None
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;		None
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  1    wreg      void 
  2952 ;; Registers used:
  2953 ;;		wreg, status,2, cstack
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;Total ram usage:        0 bytes
  2964 ;; Hardware stack levels used:    1
  2965 ;; Hardware stack levels required when called:    1
  2966 ;; This function calls:
  2967 ;;		_SPI_ExchangeByte
  2968 ;; This function is called by:
  2969 ;;		_EEP_SPI_WriteByte
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           	psect	text23
  2974  001A9A                     __ptext23:
  2975                           	opt callstack 0
  2976  001A9A                     _EEP_SPI_EnableWrite:
  2977                           	opt callstack 27
  2978  001A9A                     
  2979                           ;eep_spi.c: 9:     LATFbits.LATF7 = 0;
  2980  001A9A  9E8E               	bcf	142,7,c	;volatile
  2981  001A9C                     
  2982                           ;eep_spi.c: 10:     (void)SPI_ExchangeByte(0x06);
  2983  001A9C  0E06               	movlw	6
  2984  001A9E  EC2D  F00D         	call	_SPI_ExchangeByte
  2985  001AA2                     
  2986                           ;eep_spi.c: 11:     LATFbits.LATF7 = 1;
  2987  001AA2  8E8E               	bsf	142,7,c	;volatile
  2988  001AA4  0012               	return		;funcret
  2989  001AA6                     __end_of_EEP_SPI_EnableWrite:
  2990                           	opt callstack 0
  2991                           
  2992 ;; *************** function _EEP_SPI_ReadByte *****************
  2993 ;; Defined at:
  2994 ;;		line 33 in file "eep_spi.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  Fu8Address      1    wreg     unsigned char 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  Fu8Address      1    2[COMRAM] unsigned char 
  2999 ;;  u8ReadData      1    3[COMRAM] unsigned char 
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  1    wreg      unsigned char 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2, status,0, cstack
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;Total ram usage:        2 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    2
  3016 ;; This function calls:
  3017 ;;		_EEP_SPI_IsWriteInProgress
  3018 ;;		_SPI_ExchangeByte
  3019 ;; This function is called by:
  3020 ;;		_main
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text24
  3025  0018EC                     __ptext24:
  3026                           	opt callstack 0
  3027  0018EC                     _EEP_SPI_ReadByte:
  3028                           	opt callstack 28
  3029                           
  3030                           ;incstack = 0
  3031                           ;EEP_SPI_ReadByte@Fu8Address stored from wreg
  3032  0018EC  6E03               	movwf	EEP_SPI_ReadByte@Fu8Address^0,c
  3033  0018EE                     l2033:
  3034  0018EE  ECBE  F00C         	call	_EEP_SPI_IsWriteInProgress	;wreg free
  3035  0018F2  0900               	iorlw	0
  3036  0018F4  A4D8               	btfss	status,2,c
  3037  0018F6  EF7F  F00C         	goto	u1031
  3038  0018FA  EF81  F00C         	goto	u1030
  3039  0018FE                     u1031:
  3040  0018FE  EF77  F00C         	goto	l2033
  3041  001902                     u1030:
  3042  001902                     
  3043                           ;eep_spi.c: 41:     LATFbits.LATF7 = 0;
  3044  001902  9E8E               	bcf	142,7,c	;volatile
  3045  001904                     
  3046                           ;eep_spi.c: 42:     SPI_ExchangeByte(0x03);
  3047  001904  0E03               	movlw	3
  3048  001906  EC2D  F00D         	call	_SPI_ExchangeByte
  3049                           
  3050                           ;eep_spi.c: 43:     SPI_ExchangeByte(Fu8Address);
  3051  00190A  5003               	movf	EEP_SPI_ReadByte@Fu8Address^0,w,c
  3052  00190C  EC2D  F00D         	call	_SPI_ExchangeByte
  3053                           
  3054                           ;eep_spi.c: 44:     u8ReadData = SPI_ExchangeByte(0x00);
  3055  001910  0E00               	movlw	0
  3056  001912  EC2D  F00D         	call	_SPI_ExchangeByte
  3057  001916  6E04               	movwf	EEP_SPI_ReadByte@u8ReadData^0,c
  3058  001918                     
  3059                           ;eep_spi.c: 45:     LATFbits.LATF7 = 1;
  3060  001918  8E8E               	bsf	142,7,c	;volatile
  3061  00191A                     
  3062                           ;eep_spi.c: 47:     return(u8ReadData);
  3063  00191A  5004               	movf	EEP_SPI_ReadByte@u8ReadData^0,w,c
  3064  00191C  0012               	return		;funcret
  3065  00191E                     __end_of_EEP_SPI_ReadByte:
  3066                           	opt callstack 0
  3067                           
  3068 ;; *************** function _EEP_SPI_IsWriteInProgress *****************
  3069 ;; Defined at:
  3070 ;;		line 14 in file "eep_spi.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;		None
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  u8WIP           1    1[COMRAM] unsigned char 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      _Bool 
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;Total ram usage:        1 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    1
  3091 ;; This function calls:
  3092 ;;		_SPI_ExchangeByte
  3093 ;; This function is called by:
  3094 ;;		_EEP_SPI_ReadByte
  3095 ;;		_EEP_SPI_WriteByte
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text25
  3100  00197C                     __ptext25:
  3101                           	opt callstack 0
  3102  00197C                     _EEP_SPI_IsWriteInProgress:
  3103                           	opt callstack 27
  3104  00197C                     
  3105                           ;eep_spi.c: 18:     LATFbits.LATF7 = 0;
  3106  00197C  9E8E               	bcf	142,7,c	;volatile
  3107  00197E                     
  3108                           ;eep_spi.c: 19:     (void)SPI_ExchangeByte(0x05);
  3109  00197E  0E05               	movlw	5
  3110  001980  EC2D  F00D         	call	_SPI_ExchangeByte
  3111  001984                     
  3112                           ;eep_spi.c: 20:     u8WIP = SPI_ExchangeByte(0x00)&0x01;
  3113  001984  0E00               	movlw	0
  3114  001986  EC2D  F00D         	call	_SPI_ExchangeByte
  3115  00198A  0B01               	andlw	1
  3116  00198C  6E02               	movwf	EEP_SPI_IsWriteInProgress@u8WIP^0,c
  3117  00198E                     
  3118                           ;eep_spi.c: 21:     LATFbits.LATF7 = 1;
  3119  00198E  8E8E               	bsf	142,7,c	;volatile
  3120  001990                     
  3121                           ;eep_spi.c: 23:     if(0 != u8WIP)
  3122  001990  5002               	movf	EEP_SPI_IsWriteInProgress@u8WIP^0,w,c
  3123  001992  B4D8               	btfsc	status,2,c
  3124  001994  EFCE  F00C         	goto	u741
  3125  001998  EFD0  F00C         	goto	u740
  3126  00199C                     u741:
  3127  00199C  EFD3  F00C         	goto	l1751
  3128  0019A0                     u740:
  3129  0019A0                     
  3130                           ;eep_spi.c: 24:     {;eep_spi.c: 25:         return(1);
  3131  0019A0  0E01               	movlw	1
  3132  0019A2  EFD4  F00C         	goto	l284
  3133  0019A6                     l1751:
  3134                           
  3135                           ;eep_spi.c: 28:     {;eep_spi.c: 29:         return(0);
  3136  0019A6  0E00               	movlw	0
  3137  0019A8                     l284:
  3138  0019A8  0012               	return		;funcret
  3139  0019AA                     __end_of_EEP_SPI_IsWriteInProgress:
  3140                           	opt callstack 0
  3141                           
  3142 ;; *************** function _SPI_ExchangeByte *****************
  3143 ;; Defined at:
  3144 ;;		line 22 in file "spi.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  data            1    wreg     unsigned char 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  data            1    0[COMRAM] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      unsigned char 
  3151 ;; Registers used:
  3152 ;;		wreg, status,2
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;Total ram usage:        1 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_EEP_SPI_EnableWrite
  3168 ;;		_EEP_SPI_IsWriteInProgress
  3169 ;;		_EEP_SPI_ReadByte
  3170 ;;		_SPI_WriteBlock
  3171 ;;		_SPI_ReadBlock
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text26
  3176  001A5A                     __ptext26:
  3177                           	opt callstack 0
  3178  001A5A                     _SPI_ExchangeByte:
  3179                           	opt callstack 27
  3180                           
  3181                           ;incstack = 0
  3182                           ;SPI_ExchangeByte@data stored from wreg
  3183  001A5A  6E01               	movwf	SPI_ExchangeByte@data^0,c
  3184  001A5C                     
  3185                           ;spi.c: 22: uint8_t SPI_ExchangeByte(uint8_t data);spi.c: 23: {;spi.c: 24:     SSP2BUF =
      +                           data;
  3186  001A5C  C001  FF6A         	movff	SPI_ExchangeByte@data,3946	;volatile
  3187  001A60                     l238:
  3188  001A60  AAA1               	btfss	161,5,c	;volatile
  3189  001A62  EF35  F00D         	goto	u671
  3190  001A66  EF37  F00D         	goto	u670
  3191  001A6A                     u671:
  3192  001A6A  EF30  F00D         	goto	l238
  3193  001A6E                     u670:
  3194  001A6E                     
  3195                           ;spi.c: 26:     PIR2bits.SSP2IF = 0;
  3196  001A6E  9AA1               	bcf	161,5,c	;volatile
  3197                           
  3198                           ;spi.c: 27:     return SSP2BUF;
  3199  001A70  506A               	movf	106,w,c	;volatile
  3200  001A72  0012               	return		;funcret
  3201  001A74                     __end_of_SPI_ExchangeByte:
  3202                           	opt callstack 0
  3203                           
  3204 ;; *************** function _EEP_SPI_Initialize *****************
  3205 ;; Defined at:
  3206 ;;		line 3 in file "eep_spi.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;		None
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;		None
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		None
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3224 ;;Total ram usage:        0 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_main
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text27
  3234  001AA6                     __ptext27:
  3235                           	opt callstack 0
  3236  001AA6                     _EEP_SPI_Initialize:
  3237                           	opt callstack 30
  3238  001AA6  0012               	return		;funcret
  3239  001AA8                     __end_of_EEP_SPI_Initialize:
  3240                           	opt callstack 0
  3241                           
  3242                           	psect	rparam
  3243  0000                     tosu	equ	0xFFF
  3244                           tosh	equ	0xFFE
  3245                           tosl	equ	0xFFD
  3246                           stkptr	equ	0xFFC
  3247                           pclatu	equ	0xFFB
  3248                           pclath	equ	0xFFA
  3249                           pcl	equ	0xFF9
  3250                           tblptru	equ	0xFF8
  3251                           tblptrh	equ	0xFF7
  3252                           tblptrl	equ	0xFF6
  3253                           tablat	equ	0xFF5
  3254                           prodh	equ	0xFF4
  3255                           prodl	equ	0xFF3
  3256                           indf0	equ	0xFEF
  3257                           postinc0	equ	0xFEE
  3258                           postdec0	equ	0xFED
  3259                           preinc0	equ	0xFEC
  3260                           plusw0	equ	0xFEB
  3261                           fsr0h	equ	0xFEA
  3262                           fsr0l	equ	0xFE9
  3263                           wreg	equ	0xFE8
  3264                           indf1	equ	0xFE7
  3265                           postinc1	equ	0xFE6
  3266                           postdec1	equ	0xFE5
  3267                           preinc1	equ	0xFE4
  3268                           plusw1	equ	0xFE3
  3269                           fsr1h	equ	0xFE2
  3270                           fsr1l	equ	0xFE1
  3271                           bsr	equ	0xFE0
  3272                           indf2	equ	0xFDF
  3273                           postinc2	equ	0xFDE
  3274                           postdec2	equ	0xFDD
  3275                           preinc2	equ	0xFDC
  3276                           plusw2	equ	0xFDB
  3277                           fsr2h	equ	0xFDA
  3278                           fsr2l	equ	0xFD9
  3279                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    0
    Data        16
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     59      78
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    EEP_SPI_WriteBytes@Fpu8Data	PTR unsigned char  size(2) Largest target is 16
		 -> main@tu8Data(COMRAM[16]), 

    SPI_ExchangeBlock@block	PTR void  size(2) Largest target is 3
		 -> EEP_SPI_WriteByte@tu8Data(COMRAM[3]), 

    SPI_ExchangeBlock@data	PTR unsigned char  size(2) Largest target is 3
		 -> EEP_SPI_WriteByte@tu8Data(COMRAM[3]), 

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[6]), main@tu8DataFromEEPROM(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_drawVericalLine
    _initialisation_afficheur->_d2command
    _goto_lico->_d2command
    _draw_string->_d1command
    _drawVericalLine->_plot1
    _plot1->___awdiv
    _plot1->_d2command
    _command->_wait_status_ok
    _clear_text->_d2command
    _clear_graphics->_d2command
    _d2command->_wait_status_ok
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char
    _EEP_SPI_WriteBytes->_EEP_SPI_WriteByte
    _EEP_SPI_WriteByte->_SPI_ExchangeBlock
    _EEP_SPI_EnableWrite->_SPI_ExchangeByte
    _EEP_SPI_ReadByte->_EEP_SPI_IsWriteInProgress
    _EEP_SPI_IsWriteInProgress->_SPI_ExchangeByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0   21772
                                             18 COMRAM    41    41      0
                 _EEP_SPI_Initialize
                   _EEP_SPI_ReadByte
                 _EEP_SPI_WriteBytes
                     _SPI_Initialize
                            ___awdiv
                     _clear_graphics
                         _clear_text
                    _drawVericalLine
                        _draw_string
                          _goto_lico
           _initialisation_afficheur
           _initialisation_des_ports
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation_afficheur                             1     1      0    3466
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (2) _check_status_ok                                      1     1      0      47
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _goto_lico                                            6     5      1    2583
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (1) _draw_string                                          2     0      2    1080
                                              7 COMRAM     2     0      2
                          _d1command
 ---------------------------------------------------------------------------------
 (1) _drawVericalLine                                      4     2      2    5056
                                             14 COMRAM     4     2      2
                              _plot1
 ---------------------------------------------------------------------------------
 (2) _plot1                                                6     5      1    4791
                                              8 COMRAM     6     5      1
                            ___awdiv
                            ___awmod
                            _command
                          _d2command
 ---------------------------------------------------------------------------------
 (2) _command                                              2     2      0     215
                                              4 COMRAM     2     2      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1516
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _clear_text                                           2     2      0    3202
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (1) _clear_graphics                                       2     2      0    3202
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (2) _d2command                                            4     2      2    2273
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (2) _d1command                                            3     2      1     883
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (3) _write_d_aff                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _write_c_aff                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _wait_status_ok                                       3     3      0     140
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (2) _delai_us_char                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEP_SPI_WriteBytes                                   5     2      3     792
                                             11 COMRAM     5     2      3
                  _EEP_SPI_WriteByte
 ---------------------------------------------------------------------------------
 (2) _EEP_SPI_WriteByte                                    5     4      1     505
                                              6 COMRAM     5     4      1
                _EEP_SPI_EnableWrite
          _EEP_SPI_IsWriteInProgress
                  _SPI_ExchangeBlock
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeBlock                                    6     2      4     242
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _EEP_SPI_EnableWrite                                  0     0      0      22
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _EEP_SPI_ReadByte                                     2     2      0     114
                                              2 COMRAM     2     2      0
          _EEP_SPI_IsWriteInProgress
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _EEP_SPI_IsWriteInProgress                            1     1      0      46
                                              1 COMRAM     1     1      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _SPI_ExchangeByte                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EEP_SPI_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEP_SPI_Initialize
   _EEP_SPI_ReadByte
     _EEP_SPI_IsWriteInProgress
       _SPI_ExchangeByte
     _SPI_ExchangeByte
   _EEP_SPI_WriteBytes
     _EEP_SPI_WriteByte
       _EEP_SPI_EnableWrite
         _SPI_ExchangeByte
       _EEP_SPI_IsWriteInProgress
         _SPI_ExchangeByte
       _SPI_ExchangeBlock
   _SPI_Initialize
   ___awdiv
   _clear_graphics
     _d1command
       _delai_us_char
       _wait_status_ok
         _delai_us_char
       _write_c_aff
       _write_d_aff
     _d2command
       _delai_us_char
       _wait_status_ok
         _delai_us_char
       _write_c_aff
       _write_d_aff
   _clear_text
     _d1command
       _delai_us_char
       _wait_status_ok
         _delai_us_char
       _write_c_aff
       _write_d_aff
     _d2command
       _delai_us_char
       _wait_status_ok
         _delai_us_char
       _write_c_aff
       _write_d_aff
   _drawVericalLine
     _plot1
       ___awdiv
       ___awmod
       _command
         _delai_us_char
         _wait_status_ok
           _delai_us_char
         _write_c_aff
       _d2command
         _delai_us_char
         _wait_status_ok
           _delai_us_char
         _write_c_aff
         _write_d_aff
   _draw_string
     _d1command
       _delai_us_char
       _wait_status_ok
         _delai_us_char
       _write_c_aff
       _write_d_aff
   _goto_lico
     _d2command
       _delai_us_char
       _wait_status_ok
         _delai_us_char
       _write_c_aff
       _write_d_aff
   _initialisation_afficheur
     _check_status_ok
     _command
       _delai_us_char
       _wait_status_ok
         _delai_us_char
       _write_c_aff
     _d1command
       _delai_us_char
       _wait_status_ok
         _delai_us_char
       _write_c_aff
       _write_d_aff
     _d2command
       _delai_us_char
       _wait_status_ok
         _delai_us_char
       _write_c_aff
       _write_d_aff
     _delai_us_char
   _initialisation_des_ports

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3B      4E       1       82.1%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4E      12        0.0%
DATA                 0      0      4E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Nov 22 17:04:05 2022

  __size_of_initialisation_des_ports 002C                       _SPI_Initialize 1A74  
          ?_initialisation_des_ports 0001                          __CFG_ABW$MM 000000  
                                 l45 1A00                                   l62 120E  
                                 l63 120E                                   l91 1A58  
                                 l95 1874                                   l88 1A3E  
                                 l96 1876                         ___awdiv@sign 0006  
                        __CFG_BORV$0 000000                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                         __CFG_CP4$OFF 000000  
                       __CFG_CP5$OFF 000000                         __CFG_CP6$OFF 000000  
                       __CFG_CP7$OFF 000000                                  l100 163C  
                                l120 1712                                  l105 16A4  
                                l114 17B4                                  l124 1954  
                                l109 1A24                                  l133 12F6  
                                l126 197A                                  l150 15B6  
                                l240 1A6E                                  l216 194C  
                                l241 1A72                                  l305 183C  
                                l250 1766                                  l235 1A88  
                                l147 1542                                  l171 162E  
                                l181 18EA                                  l238 1A60  
                                l246 172C                                  l280 1AA4  
                                l248 173A                                  l176 18B0  
                                l169 160E                                  l290 1902  
                                l291 191C                                  l284 19A8  
                                l277 1AA6                                  l198 13C8  
                                l552 153C                                  l299 1800  
                                l539 148C                         __CFG_CPB$OFF 000000  
                        main@u8Index 003A                         ?_draw_string 0008  
                       __CFG_CPD$OFF 000000                                  u700 16E0  
                                u701 16DC                                  u630 197A  
                                u710 1700                                  u631 1976  
                                u711 16FC                                  u720 173A  
                                u640 1666                                  u800 147C  
                                u721 1736                                  u641 1662  
                                u801 1478                                  u730 1766  
                                u650 167E                                  u810 14A0  
                                u731 1762                                  u651 167A  
                                u811 149C                                  u740 19A0  
                                u900 17E4                                  u660 16A2  
                                u820 14BA                                  u741 199C  
                                u901 17E0                                  u661 169E  
                                u821 14B6                                  u670 1A6E  
                                u750 13DC                                  u830 14D4  
                                u910 125A                                  u671 1A6A  
                                u751 13D8                                  u831 14D0  
                                u911 1256                                  u760 13F6  
                                u840 14F2                                  u680 1A18  
                                u920 1278                                  u761 13F2  
                                u841 14EE                                  u681 1A14  
                                u921 1274                                  u690 16C0  
                                u930 18B0                                  u770 141C  
                                u850 1508                                  u691 16BC  
                                u931 18AC                                  u771 1418  
                                u851 1504                                  u940 18EA  
                                u780 143A                                  u860 152C  
                                u941 18E6                                  u781 1436  
                                u861 1528                                  u790 1456  
                                u950 15D2                                  u870 1868  
                                u791 1452                                  u951 15CE  
                                u871 1864                                  u880 1782  
                                u960 15E6                                  u881 177E  
                                u961 15E2                                  u890 17A2  
                                u970 162E                                  u891 179E  
                                u971 162A                                  u980 156A  
                                u990 1580                                  u991 157C  
                                u987 1560          EEP_SPI_WriteByte@Fu8Address 0008  
              SPI_ExchangeBlock@data 0005                         ___awmod@sign 0006  
                                wreg 000FE8                         __CFG_WAIT$ON 000000  
                               l2001 15BA                                 l2011 15EA  
                               l2003 15C2                                 l2021 1584  
                               l2013 1610                                 l2005 15D2  
                               l2101 10B0                                 l2031 18EE  
                               l2023 1920                                 l2015 153E  
                               l2007 15D6                                 l2111 10FC  
                               l2103 10BC                                 l2033 18EE  
                               l2025 192C                                 l2017 1544  
                               l2009 15E6                                 l2113 110C  
                               l2105 10CC                                 l2035 1904  
                               l2043 1804                                 l2027 1938  
                               l2019 1580                                 l2131 11A4  
                               l2123 114E                                 l2107 10DC  
                               l2115 111C                                 l2051 1008  
                               l2037 1918                                 l2045 1810  
                               l2029 193A                                 l2133 11C6  
                               l2125 1150                                 l2117 1124  
                               l2109 10EC                                 l2053 101A  
                               l2039 191A                                 l2047 1828  
                               l2135 11FC                                 l2127 1168  
                               l2119 113A                                 l2071 1044  
                               l2063 101E                                 l2055 101A  
                               l2049 182A                                 l2129 118A  
                               l2081 1058                                 l2073 1048  
                               l2065 102E                                 l2057 101A  
                               l2083 1062                                 l2075 104C  
                               l2067 1030                                 l1613 1950  
                               l1621 1A2C                                 l1701 16E0  
                               l2093 1080                                 l2085 106E  
                               l2077 1050                                 l2069 1040  
                               l1615 1968                                 l1631 1A38  
                               l1623 1A30                                 l1711 170C  
                               l1703 16E6                                 l2239 1392  
                               l2095 1094                                 l2087 107C  
                               l2079 1054                                 l1721 173C  
                               l1617 196A                                 l1641 1A4A  
                               l1633 1A3A                                 l1625 1A32  
                               l1705 16EC                                 l1713 1710  
                               l1801 1492                                 l2097 1096  
                               l1731 1AA2                                 l1723 1748  
                               l1651 1A54                                 l1643 1A4C  
                               l1635 1A3C                                 l1627 1A34  
                               l1619 1A28                                 l1707 1700  
                               l1811 14C2                                 l1803 14A0  
                               l2099 10A6                                 l1741 198E  
                               l1733 197C                                 l1725 174C  
                               l1717 1714                                 l1901 17EA  
                               l1661 1668                                 l1653 1A56  
                               l1645 1A4E                                 l1637 1A42  
                               l1629 1A36                                 l1709 1706  
                               l1821 1508                                 l1813 14D4  
                               l1805 14A8                                 l1751 19A6  
                               l1743 1990                                 l1735 197C  
                               l1727 1A9A                                 l1719 1720  
                               l1903 17FE                                 l1663 166E  
                               l1671 1690                                 l1655 1630  
                               l1647 1A50                                 l1639 1A46  
                               l1831 1534                                 l1823 1510  
                               l1815 14DC                                 l1807 14AC  
                               l1911 19EC                                 l1745 19A0  
                               l1737 197E                                 l1729 1A9C  
                               l1673 16A2                                 l1665 167E  
                               l1657 164E                                 l1649 1A52  
                               l1761 13E4                                 l1825 1516  
                               l1817 14E4                                 l1809 14BA  
                               l1681 1A04                                 l1841 1870  
                               l1921 19F6                                 l1913 19EE  
                               l1905 19D6                                 l1739 1984  
                               l1667 1684                                 l1659 1666  
                               l1851 1788                                 l1691 16A8  
                               l1771 140A                                 l1763 13E8  
                               l1755 13CA                                 l1819 14F2  
                               l1827 151C                                 l1683 1A18  
                               l1835 183E                                 l1931 1216  
                               l1923 19F8                                 l1915 19F0  
                               l1907 19E8                                 l1677 1A5C  
                               l1669 168C                                 l1853 178E  
                               l1861 17B2                                 l1845 176A  
                               l1693 16AC                                 l1781 1440  
                               l1773 141C                                 l1765 13F6  
                               l1757 13CE                                 l1829 152C  
                               l1685 1A1E                                 l1837 1854  
                               l1941 1236                                 l1933 122A  
                               l1925 19FA                                 l1917 19F2  
                               l1909 19EA                                 l1855 17A2  
                               l1847 176E                                 l1695 16C0  
                               l1783 1456                                 l1775 1424  
                               l1791 146C                                 l1767 13FE  
                               l1759 13DC                                 l1687 1A24  
                               l1679 1A04                                 l1871 1340  
                               l1839 1868                                 l1951 125A  
                               l1943 1238                                 l1935 122C  
                               l1927 19FC                                 l1919 19F4  
                               l1961 1A7C                                 l1857 17A8  
                               l1849 1782                                 l1697 16C6  
                               l1793 147C                                 l1785 145E  
                               l1777 142C                                 l1769 1402  
                               l1873 134A                                 l1865 12FA  
                               l1953 1260                                 l1945 1242  
                               l1937 122E                                 l1929 19FE  
                               l1891 17C8                                 l1971 1A86  
                               l1963 1A7E                                 l1859 17AE  
                               l1699 16CC                                 l1795 1484  
                               l1787 1460                                 l1779 143A  
                               l1875 1354                                 l1883 1372  
                               l1867 1324                                 l1947 1244  
                               l1955 1264                                 l1939 1230  
                               l1893 17CC                                 l1965 1A80  
                               l1981 188E                                 l1973 1878  
                               l1789 1466                                 l1877 135E  
                               l1869 1336                                 l1957 1278  
                               l1949 124A                                 l1895 17D0  
                               l1967 1A82                                 l1959 1A74  
                               l1983 1898                                 l1975 1886  
                               l1799 148E                                 l1879 1368  
                               l1897 17E4                                 l1889 17B8  
                               l1969 1A84                                 l1985 189C  
                               l1899 17E8                                 l1995 18C8  
                               l1987 18B2                                 l1997 18D2  
                               l1989 18C0                                 l1999 18D6  
                        main@tu8Data 0014                                 STR_1 1001  
                               u1000 15A6                                 u1010 15B6  
                               u1011 15B2                                 u1020 194C  
                               u1100 10EC                                 u1021 1948  
                               u1101 10E8                                 u1030 1902  
                               u1110 10FC                                 u1031 18FE  
                               u1007 159C                                 u1111 10F8  
                               u1040 183C                                 u1120 110C  
                               u1041 1838                                 u1121 1108  
                               u1130 111C                                 u1131 1118  
                               u1051 1012                                 u1140 114A  
                               u1060 1040                                 u1141 1146  
                               u1061 103C                                 u1070 10A6  
                               u1071 10A2                                 u1080 10CC  
                               u1081 10C8                                 u1090 10DC  
                               u1091 10D8                                 _LATH 000F90  
                               _LATJ 000F91                         __CFG_WDTPS$1 000000  
           __end_of_EEP_SPI_ReadByte 191E                                 _main 1008  
 __size_of_EEP_SPI_IsWriteInProgress 002E                     ?_drawVericalLine 000F  
                               fsr1h 000FE2                                 fsr2h 000FDA  
                               indf1 000FE7                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
             SPI_ExchangeBlock@block 0001           ?_EEP_SPI_IsWriteInProgress 0001  
         SPI_ExchangeBlock@blockSize 0003                                 prodh 000FF4  
                               prodl 000FF3                                 start 0000  
                      __CFG_IESO$OFF 000000                        __CFG_FOSC$HS1 000000  
             __end_of_SPI_Initialize 1A8A           __size_of_SPI_ExchangeBlock 0054  
                      __CFG_MCLRE$ON 000000         EEP_SPI_WriteBytes@Fu8Address 000F  
                       ___param_bank 000000                     ??_wait_status_ok 0002  
             EEP_SPI_WriteByte@F6868 004C                        __CFG_RETEN$ON 000000  
                              ?_main 0001                      __end_of___awdiv 148E  
                    __end_of___awmod 153E                      ___awdiv@divisor 0003  
                     __CFG_DEBUG$OFF 000000                      ___awdiv@counter 0005  
                              _PORTH 000F87                                _TRISH 000F99  
                              _TRISJ 000F9A                          _write_c_aff 1A40  
                        _write_d_aff 1A26                      write_d_aff@data 0001  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
                      __CFG_WRT4$OFF 000000                       __CFG_EBRT0$OFF 000000  
                      __CFG_WRT5$OFF 000000                       __CFG_EBRT1$OFF 000000  
                      __CFG_WRT6$OFF 000000                       __CFG_EBRT2$OFF 000000  
                      __CFG_WRT7$OFF 000000                       __CFG_EBRT3$OFF 000000  
                     __CFG_EBRT4$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBRT5$OFF 000000                       __CFG_EBRT6$OFF 000000  
                     __CFG_EBRT7$OFF 000000                      __end_of_command 1A26  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBRTB$OFF 000000  
                              _plot1 12F8           __end_of_EEP_SPI_WriteBytes 183E  
                     __CFG_BOREN$OFF 000000                                tablat 000FF5  
              __end_of_delai_us_char 197C                                plusw1 000FE3  
                              plusw2 000FDB                      _check_status_ok 183E  
                              status 000FD8    __end_of_EEP_SPI_IsWriteInProgress 19AA  
            __size_of_clear_graphics 003A                      ?_SPI_Initialize 0001  
                    __initialization 19AA                         __end_of_main 1216  
                             ??_main 0013                        __activetblptr 000003  
                     __CFG_PLLCFG$ON 000000                   __size_of_d1command 004E  
           __end_of_SPI_ExchangeByte 1A74                   __size_of_d2command 006E  
                             ?_plot1 0009                               _ANCON0 000F25  
                             _ANCON1 000F24                               _ANCON2 000F23  
                   ___awdiv@dividend 0001         __size_of_EEP_SPI_EnableWrite 000C  
                             _MEMCON 000F26                      __CFG_BBSIZ$BB1K 000000  
                     __CFG_WDTEN$OFF 000000                       __CFG_XINST$OFF 000000  
                    __CFG_EASHFT$OFF 000000                            ??___awdiv 0005  
                     __CFG_STVREN$ON 000000                            ??___awmod 0005  
         EEP_SPI_ReadByte@u8ReadData 0004                     ___awdiv@quotient 0007  
                    ___awmod@divisor 0003                      ___awmod@counter 0005  
                          ??_command 0005                         __pdataCOMRAM 003C  
                             plot1@x 000E                               plot1@y 0009  
                       __mediumconst 0000                 __size_of_draw_string 007A  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8              __end_of_check_status_ok 1878  
                         __accesstop 0060              __end_of__initialization 19D0  
                      ___rparam_used 000001                       __pcstackCOMRAM 0001  
                  __end_of_d1command 17B6                    __end_of_d2command 1714  
                 _EEP_SPI_Initialize 1AA6                        __end_of_plot1 13CA  
                ?_EEP_SPI_Initialize 0001                              ??_plot1 000A  
                  ?_EEP_SPI_ReadByte 0001                 ??_EEP_SPI_Initialize 0001  
                     _clear_graphics 18B2          ??_EEP_SPI_IsWriteInProgress 0002  
                 ??_EEP_SPI_ReadByte 0003                   __size_of_goto_lico 0078  
                 __CFG_CCP2MX$PORTBE 000000             EEP_SPI_WriteByte@Fu8Data 0007  
                         _clear_text 1878                         ?_write_c_aff 0001  
                       ?_write_d_aff 0001             _initialisation_afficheur 1216  
                   ?_check_status_ok 0001                              _SSP2BUF 000F6A  
                  wait_status_ok@err 0002                    wait_status_ok@res 0004  
           EEP_SPI_WriteByte@tu8Data 0009                     ??_SPI_Initialize 0001  
             __end_of_clear_graphics 18EC             _initialisation_des_ports 19D6  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000                   _EEP_SPI_WriteBytes 1802  
                            ___awdiv 13CA                              ___awmod 148E  
           __size_of_drawVericalLine 0030                  _EEP_SPI_EnableWrite 1A9A  
                       __psmallconst 1000                __CFG_RTCOSC$INTOSCREF 000000  
                            __pcinit 19AA                              __ramtop 1000  
                ?_EEP_SPI_WriteBytes 000C                              __ptext0 1008  
                            __ptext1 19D6                              __ptext2 1216  
                            __ptext3 183E                              __ptext4 15B8  
                            __ptext5 153E                              __ptext6 191E  
                            __ptext7 12F8                              __ptext8 1A02  
                            __ptext9 148E                              _command 1A02  
          _EEP_SPI_IsWriteInProgress 197C                   draw_string@tableau 0008  
                   ___awmod@dividend 0001                    __end_of_goto_lico 1630  
                  __CFG_MSSPMSK$MSK5 000000            EEP_SPI_WriteBytes@Fu8Size 000E  
               ?_EEP_SPI_EnableWrite 0001                    ?_SPI_ExchangeByte 0001  
               end_of_initialization 19D0                   ??_SPI_ExchangeByte 0001  
               ??_EEP_SPI_WriteBytes 000F                      ?_clear_graphics 0001  
          EEP_SPI_WriteBytes@u8Index 0010                          ?_clear_text 0001  
                            postdec1 000FE5                              postinc0 000FEE  
                       goto_lico@adr 000D               __size_of_delai_us_char 002E  
            __size_of_wait_status_ok 0076                            _TRISAbits 000F92  
     EEP_SPI_IsWriteInProgress@u8WIP 0002                            _TRISCbits 000F94  
                          _TRISDbits 000F95                            _TRISFbits 000F97  
                          _TRISGbits 000F98                            __CFG_BW$8 000000  
              ??_EEP_SPI_EnableWrite 0002                    clear_graphics@add 0009  
                         command@cmd 0006                   check_status_ok@res 0001  
               SPI_ExchangeByte@data 0001                        __pidataCOMRAM 1A8A  
                          _d1command 1768                            _d2command 16A6  
                      ??_draw_string 000A                    ??_drawVericalLine 0011  
                start_initialization 19AA                 __size_of_write_c_aff 001A  
               __size_of_write_d_aff 001A                  __size_of_clear_text 003A  
                      _delai_us_char 194E                main@tu8DataFromEEPROM 0024  
         ??_initialisation_afficheur 0009                        clear_text@add 0009  
          __size_of_EEP_SPI_ReadByte 0032                           ?_d1command 0005  
               delai_us_char@ucdelai 0001                           ?_d2command 0005  
             drawVericalLine@colonne 000F                          __pbssCOMRAM 004C  
         ??_initialisation_des_ports 0001                  __end_of_draw_string 15B8  
                     ?_delai_us_char 0001          __size_of_EEP_SPI_Initialize 0002  
                          _main$1411 0038                             ?___awdiv 0001  
                           ?___awmod 0001                             ?_command 0001  
                     _wait_status_ok 1630                          __smallconst 1000  
                   goto_lico@colonne 0009                    _EEP_SPI_WriteByte 17B6  
                        _PADCFG1bits 000F53                     ??_clear_graphics 0009  
                 ?_EEP_SPI_WriteByte 0007                       __size_of_plot1 00D2  
                 write_c_aff@command 0001                            _goto_lico 15B8  
                           _LATCbits 000F8B                             _LATFbits 000F8E  
                           _LATGbits 000F8F                             _LATJbits 000F91  
           __size_of_check_status_ok 003A                  ??_EEP_SPI_WriteByte 0008  
                           _PIR2bits 000FA1                         ??_clear_text 0009  
          __size_of_SPI_ExchangeByte 001A                            main@F6860 003C  
                           _SSP2CON1 000F67                             _SSP2STAT 000F68  
             __end_of_wait_status_ok 16A6                          ??_d1command 0006  
                  __CFG_ECCPMX$PORTH 000000                          ??_d2command 0007  
                   __CFG_SOSCSEL$DIG 000000                            main@u8Cpt 003B  
                        _draw_string 153E            __end_of_EEP_SPI_WriteByte 1802  
                        _INTCON2bits 000FF1                      ??_delai_us_char 0001  
                          copy_data0 19BE                   __end_of_clear_text 18B2  
                         ?_goto_lico 0009          __size_of_EEP_SPI_WriteBytes 003C  
                           __Hrparam 0000                             __Lrparam 0000  
                    _drawVericalLine 191E              __size_of_SPI_Initialize 0016  
   __end_of_initialisation_afficheur 12F8                     __size_of___awdiv 00C4  
                   __size_of___awmod 00B0                drawVericalLine@lenght 0010  
                   _EEP_SPI_ReadByte 18EC                      ?_wait_status_ok 0001  
initialisation_afficheur@error_count 0009          __end_of_EEP_SPI_EnableWrite 1AA6  
                   __size_of_command 0024     __end_of_initialisation_des_ports 1A02  
                           __ptext10 13CA                             __ptext11 1878  
                           __ptext20 1802                             __ptext12 18B2  
                           __ptext21 17B6                             __ptext13 16A6  
                           __ptext22 1714                             __ptext14 1768  
                           __ptext23 1A9A                             __ptext15 1A26  
                           __ptext24 18EC                             __ptext16 1A40  
                           __ptext25 197C                             __ptext17 1630  
                           __ptext26 1A5A                             __ptext18 194E  
                           __ptext27 1AA6                             __ptext19 1A74  
                       _SSP2CON1bits 000F67                        __size_of_main 020E  
                  _SPI_ExchangeBlock 1714                    ??_check_status_ok 0001  
                 ?_SPI_ExchangeBlock 0001                  __CFG_INTOSCSEL$HIGH 000000  
         EEP_SPI_WriteBytes@Fpu8Data 000C                        ??_write_c_aff 0001  
                      ??_write_d_aff 0001           __size_of_EEP_SPI_WriteByte 004C  
                ??_SPI_ExchangeBlock 0005                 drawVericalLine@index 0012  
               drawVericalLine@ligne 0011                          ??_goto_lico 000A  
                           plot1@add 000C              __end_of_drawVericalLine 194E  
                     goto_lico@ligne 000C            __end_of_SPI_ExchangeBlock 1768  
                   _SPI_ExchangeByte 1A5A                         d1command@cmd 0005  
                       d1command@res 0007                          d1command@d1 0006  
                __end_of_write_c_aff 1A5A                  __end_of_write_d_aff 1A40  
  __size_of_initialisation_afficheur 00E2                         d2command@cmd 0006  
          ?_initialisation_afficheur 0001                         d2command@res 0008  
         __end_of_EEP_SPI_Initialize 1AA8                  __CFG_BORPWR$ZPBORMV 000000  
               wait_status_ok@status 0003                          d2command@d1 0007  
                        d2command@d2 0005           EEP_SPI_ReadByte@Fu8Address 0003  
