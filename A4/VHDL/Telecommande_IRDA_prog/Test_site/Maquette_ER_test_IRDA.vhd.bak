
--=======================================================
--  This code is generated by Terasic System Builder
--=======================================================
library ieee;
use ieee.std_logic_1164.all ;


entity Maquette_ER is
	port (

			--//////////// CLOCK //////////
			CLOCK_50, CLOCK2_50, CLOCK3_50 	:	in		std_logic ;

			--//////////// LED //////////
			LEDG										:	out	std_logic_vector(8 downto 0) ;
			LEDR										:	out	std_logic_vector(17 downto 0) ;

			--//////////// KEY //////////
			KEY										:	in		std_logic_vector(3 downto 0) ;

			--//////////// SW //////////
			SW											:	in		std_logic_vector(17 downto 0) ;

			--//////////// SEG7 //////////
			HEX0,	HEX1,	HEX2,	HEX3,	HEX4,	HEX5,	HEX6,	HEX7 : out	std_logic_vector(6 downto 0) ;

			--//////////// LCD //////////
			LCD_BLON, LCD_EN,	LCD_ON, LCD_RS, LCD_RW : out std_logic ;
			LCD_DATA									:	inout	std_logic_vector(7 downto 0) ;

			--//////////// SDCARD //////////
			SD_CLK									:	out 	std_logic ;
			SD_CMD									:	inout std_logic ;
			SD_DAT									:	inout std_logic_vector(3 downto 0) ;
			SD_WP_N									:	in 	std_logic ;

			--//////////// VGA //////////
			VGA_B, VGA_G, VGA_R					:	out	std_logic_vector(7 downto 0) ;
			VGA_BLANK_N, VGA_CLK					:	out	std_logic ;
			VGA_HS, VGA_SYNC_N, VGA_VS			:	out	std_logic ;

			--//////////// Audio //////////
			AUD_ADCDAT								:	in		std_logic ;
			AUD_ADCLRCK, AUD_BCLK, AUD_DACLRCK : inout std_logic ;
			AUD_DACDAT, AUD_XCK					:	out	std_logic ;

			--//////////// I2C for Audio HSMC  //////////
			I2C_SCLK									:	out	std_logic ;
			I2C_SDAT									:	inout	std_logic ;

			--//////////// IR Receiver //////////
			IRDA_RXD									:	in 	std_logic ;

			--//////////// SRAM //////////
			SRAM_ADDR								:	out	std_logic_vector(19 downto 0) ;
			SRAM_DQ									:	inout std_logic_vector(15 downto 0) ;
			SRAM_CE_N, SRAM_LB_N, SRAM_OE_N	:	out	std_logic ;
			SRAM_UB_N, SRAM_WE_N					:	out	std_logic ;

			--//////////// GPIO, GPIO connect to GPIO Default //////////
			GPIO										:	inout std_logic_vector(35 downto 0) ;

			--//////////// HSMC, HSMC connect to HSMC Expansion - 3.3V //////////
			HSMC_CLKIN0, HSMC_CLKIN_N1, HSMC_CLKIN_P1	:	in 	std_logic ;
			HSMC_CLKIN_N2, HSMC_CLKIN_P2		:	in 	std_logic ;
			HSMC_CLKOUT_N1, HSMC_CLKOUT_P1, HSMC_CLKOUT0	:	inout	std_logic ;
			HSMC_CLKOUT_N2, HSMC_CLKOUT_P2	:	inout	std_logic ;
			HSMC_D									:	inout std_logic_vector(3 downto 0) ;
			HSMC_RX_D_N								:	inout std_logic_vector(16 downto 0) ;
			HSMC_RX_D_P								:	inout std_logic_vector(16 downto 0) ;
			HSMC_TX_D_N								:	inout std_logic_vector(16 downto 0) ;
			HSMC_TX_D_P								:	inout std_logic_vector(16 downto 0) 
			) ;
end entity Maquette_ER ;

architecture synth of Maquette_ER is

	
begin





-- utiliser le modele ci-dessous pour instancier votre composant gestion systÃ¨me :

--	le_test : test_conv 
--		port map (
--			arazb => key(0),
--			clk_10mhz => clk_10MHZ,
--			
--			inter => SW,
--			
--			ssb_cna => ssb_cna,
--			sclk_cna => sclk_cna,
--			mosi_cna => mosi_cna	,
--			
--			ssb_can => ssb_can,
--			sclk_can => sclk_can,
--			mosi_can => mosi_can	,
--			miso_can => miso_can
--			
--		) ;


		
		
-- NE PAS MODIFIER CE QUI SUIT !		

-- connexions leds rouges
	ledr <= sw ;
	ledG(8 downto 1) <= (others => '0') ;

-- connexions spi potentiometre et afficheur
	mosi_aff <= imosi ;
	mosi_pot		 <= imosi ;
	sclk_aff <= isclk ;
	sclk_pot	 <= isclk ;

	hex0 <= (others => '1') ;
	hex1 <= (others => '1') ;
	hex2 <= (others => '1') ;
	hex3 <= (others => '1') ;
	hex4 <= (others => '1') ;
	hex5 <= (others => '1') ;
	hex6 <= (others => '1') ;
	hex7 <= (others => '1') ;
	

-- connexions convertisseurs
	miso_can <= HSMC_TX_D_N(15);
	hsmc_tx_D_P(15) <= mosi_can ;
	HSMC_TX_D_P(16) <= sclk_can ;
	hsmc_tx_D_N(16) <= ssb_can ;
	
	hsmc_rx_D_n(16) <= sclk_cna ;
	hsmc_rx_D_p(16) <= mosi_cna ;
	hsmc_rx_D_n(15) <= ssb_cna ;

--	ssb_cna <= '1';
--	sclk_cna <= '1';
--	mosi_cna	 <= '1';
--	
--	ssb_can <= '1';
--	sclk_can <= '1';
--	mosi_can	 <= '1';
--	miso_can <= '1';
	
-- instanciation pll
	pll_inst : pll port map (
			inclk0	 => CLOCK_50,
			c0	 => clk_10mhz
		);
	
			
		
-- connexions Telemetre
	pulse_in <= HSMC_rx_D_n(9) ;		-- recepteur HF
	
	recep		<= HSMc_tx_D_N(12) ;
	HSMC_CLKOUT_P2 <= em_1 ;
	HSMc_tx_D_n(13)  <=  em_2 ;
	HSMc_tx_D_p(13) <= shutdown ;
	
	HSMc_tX_D_P(10) <= ssb_aff ;
	HSMc_TX_D_P(9) <= sclk_aff ;
	HSMc_TX_D_N(10) <= mosi_aff ;
	miso_aff <= HSMc_TX_D_N(9) ;
	
	HSMc_TX_D_P(12) <= ssb_pot ;
	HSMc_TX_D_P(14) <= sclk_pot ;
	HSMC_CLKOUT_N2 <= mosi_pot ;
		



end ;

